{
  "video_id": "lCY0--mo_s0",
  "video_title": "Mooly Sagiv (Certora) Securing AI-Assisted DeFi Development with Formal Verification",
  "video_url": "https://www.youtube.com/watch?v=lCY0--mo_s0",
  "channel_title": "[EthCC] Livestream 4",
  "published_at": "2025-07-03T01:01:28+00:00",
  "duration_seconds": null,
  "view_count": 83,
  "like_count": 0,
  "description": "AI tools can generate or optimize smart contracts, but often introduce subtle bugs. This talk explores how formal verification can be used to validate AI output, catch edge cases, and guide models toward safer and more reliable code.",
  "transcript": {
    "language": "en",
    "is_auto_generated": false,
    "total_segments": 484,
    "aggregated_text": "[Music] Good afternoon and thank you for coming. I'm sorry like the previous speaker I've changed the talk uh but I think I made it more interesting uh for you to judge. So I'm not going to talk about how you use a formal verification to secure AI. I'm going to talk about the opposite. I'm going to talk about how to make use AI to make formal verification easier. And actually this talk applied not just for formal verification, it applies for fuzzing and others. So please listen, I'll be uh I'll save some time for questions. So about me, I'm a co-founder of Satara. Feel free to ping me. This talk is actually not by done by me. It's done by three amazing people on our team. uh Naftali uh Yoslav and Yannes and they're not here but are available to answer questions. It's a small project that we have done we are incorporating into our open source tool. Uh we can give you the source already or if you want you get it as part of the open source repository of the set approver. So there are many many tools in this space and we think that this work applies to many of them. Here we listed some of them. So Slater is the sort of a very mature static analysis tool. Fairly easy to use. The problem doesn't provide a lot of security. It's very very general. Also it's hard to use it for bugs and you can integrate into CI. Uh Foundry is a fing tool. There's also Enkidna. These are good tools. they give more coverage than static analysis but a bit harder to use. Then there's Kalin interactive term provers. Uh uh there's also audit agent which is a recent and many others. I'm sorry I didn't have to list them all but these are tools based on AI to find bugs and uh they actually I listed the one by nethermind but there are others. I apologize and our own tool prover which is open source. This is actually a tool that we think it's very very usable for developers. It checks the code at the moment. We made it available for EVM, SVM and web assembly and it's basically give you high security and it's still easier to use. But the the purpose of this talk it make it even more easier. So maybe just sort of talk about manual what are the things that people are use for security. So uh obviously people are using manual auditing this is the standard and we know that auditors can find a lot of issues but the problem is auditing it's a human process so it's errorprone and it could be expensive and time consuming testing fuzzing is great you can automate it but you miss some of the bugs and it's very hard it's also can can be expensive formal verification has been used in other industry for example safety critical system it's provide a guarantee but it's really really expensive in terms of human effort and computational effort and AI checks it's it's something which of course exist before but now with the AI it's getting more and more popular so what we want to do we want to integrate it into formal verification this is the definition of formal verification come from Wikipedia it's this method to give you a guarantee about your code but we take from this the actually definition that was done given to us by Ernesto uh from BGD it's the mechanism that actually increase your security or your confidence in your code so somehow it's something that allow you to go to the unknown part of your code it give you more security of your code uh so it's increase your trust and this is of course a nice quote by Vital Talic this came sort of showed that if you use form verification open source you increase the trust in the software and also uh to uh looking actually after using our approver essentially saying that this can do can be also useful for the Solana uh okay so for the purpose of this talk I'm going to do something which basically I'm saying formal verification is good for proofs but it's also good for bug finding and I'm going to show you that actually formal verification in addition to the fact that it used for proof it it's actually useful for bug finding okay so why actually do we want to use AI for formal verification and why is formal verification not heavily used if it's so useful so there are many answers but I think one particular answer that formal verification is considered hard and a lot of people I've studied computer formal verification for a long time. They say this is sort of the hardest problem in computer science and it's hard from a computational perspective but it's also hard in terms of learning. Okay. So these are many things that sort of go to you that you are starting from verification. Probably the most difficult part is the mindset. You have to change your mindset. when you are hacker or when you are programmer you have some kind of adversarial thinking which is very very useful you think how do I break it when you're doing formal verification you need this adversarial thinking but you also need to think about what properties is and actually some people say that the bad hackers are the ones which think about both but it's sometimes hard to find so you need to think in terms of what is the code is expected to do and then you can use it with with tools or with with humans to break this thing. So you need to think and and another thing that you need to do you need to think declaratively you need to think of what is this code as opposed to imperatively and we know it's not it's incomparable you know we think imperatively I go someplace I need to do something it's sometimes more natural but somehow and for example when we work with client sometimes we come with a property we say we wish we knew it before we wrote the code because you have to come with this kind of properties and it's hard for people to do As a result, sometimes people use abuse formal verification. Our tools are that and there are many way you can abuse formal verification. For example, you can prove things which is tutology. You prove that seven is greater than five. That's great. But it's not saying anything about your code. And also diagnosing formal verification is hard because basically formal verification can do something very very useful to you. But then it gives you an example and it's hard for you to understand what it means. So that's why formal verification and we see some kind of a learning care. Somebody learns formalification and it takes him or her some time. So what do we want to do in the purpose of this talk and we have only done baby step. We have actually added this AI based formal verification. The idea is a formal verification but not the human is writing the properties. The system is writing the properties. So the system is trying to infer the properties that a smart human is writing. Okay. So how does it work? So we start with the with the general defi knowledge. We basically have a data base of information. We take the design of the code. We take the code itself and we also take any documentation that you have in mind. And this is actually where the smart part start. You infer a property. We have a very simple language that we which is you can think of something like swel or something like this. It's a it's a language that allow you things to write things that you cannot exactly code but it's similar to code. It describe the requirement on the code. I'll give you an example soon. Then we use a normal compiler. We essentially this is not very smart but still you have to do it. You have to compile into the CV into our own domain specific language for writing the properties. And then we run the ser approver. This is an automatic tool. You can write it on the cloud. If it verifies the property you know it verifies. So if you trust it you increase your confidence in the code. The interesting thing what happened? What happened with this violated there? We use the AI again. Why do we use the AI again? Because we want the AI to help us diagnose what is the problem because we want to AI to to explain actually and AI are very good but they are very local and they can make terrible mistakes but it's not so bad. We run it and we will check it. Okay. So basically this give you this potential exploit scenario that a human needs to invest to to check and then if this error is real then you in fact apply the manual fix and then you write the set approver. So I give you a few examples as I said we are doing really really step at this point. So please bear in mind that we need to run it on way more examples but we have been running it on few examples based on things for the public domain and based on many audits and formal verification project that we have done. So this is a of course example everybody knows is the open zeppelin transfer. It's a baby example but it's good to show you what we do. So we take the code, we take the transfer function, we basically oops okay we take the the code we take the transfer function and what we do we take the code itself and we hide it we don't show the AI the implementation itself because we want it actually to find something which is the intended behavior not the executed behavior but we show it all the other part of the code and then we also show of course the documentation and We ask the AI to infer what is the intended behavior of this code. So this is what we do. You see this thing. Okay. And let's see what it's inferred. Oops. Some reason it doesn't move. No. Okay. So it infers very simple property. Uh it infers that the total supply is unchanged. It's still a simple property you see that and it also infers potential exploit scenario. Okay, it's it's infers that a buggy transfer might might increase the total supply with allowing it. So it infer both of these. It infers the spec and you see this spec is not actually written exactly in solidity. Bear in mind we have actually some extension of solidity to express some things that to to to allow you to write the properties but it's not the full power of CVL something much weaker and you see this is what it infers it's a very interesting case but it's very very simple we also apply to something a bit more real okay oh sorry this is the code which is generated by our compiler you see this is satura verification language if you don't No satar verification language ignore it there's some boilerplate code it's essentially writing on the bite code it is details it's details think about it some it's some details but the nice thing about it you don't need to know that it's automatically generated from the high level spec and I imagine you can do it for fer like founder and and kidna we have not done it but I'm sure you can do something similar okay so let's to look into more interesting example uh We work with client before they deploy the code. This is a beautiful client. We have been working I think for four years. Balance. I'm sure everybody knows them and we work with them together with other auditors. And we are proud of finding the most interesting bugs preventing the most interesting bugs. And here is a very interesting bug which we prevented at this point without AI with our humans of course and it's a critical bug. uh I won't be able to explain but the idea it's written in our blog and actually acknowledged by the by the by the balancer team. It's essentially allow you to use the token in a way that you actually steal all the money. It's a very very tricky situation. I I wouldn't be able to find such a bug. Okay, how did we find it? So we ended up writing a property. You see we wrote a property. It says this is the property and essentially the property says that if you have shares you have asset to cover for the shares. So it's a very natural property and then you see we write it in our CVL it's an invariant. It's an invariant you can write it. So it's basically you see in CVL you write in variants which are independent of the function. So you see that here we say that if you have uh total shares then you have assets. It's a very very uh sort of natural property and this natural property is violated in a very rare situation and the prover automatically find this violation but the human had to write this property okay so somebody in our team has to write this property or okay so let's see what the AI inferred so so the AI inferred something actually simpler the AI inferred that basically the the the amount of asset doesn't change. It's infer simpler property and let wait a second and it's also infer exploit. It's interesting. It also infers an exploit. You see if the buffer asset could be changed in fact it's interesting it infers and it infers it of course based on history of bugs that happened. So basically this thing knows about many many bugs that happened. So the AI infer the property and infer also the exploit and you see this is the generated CVL code. It's technical. It doesn't matter. It's basically generated automatically by the compiler. So it's interesting. This is a case that a bug that somebody could have found without using us at all. Okay. I can tell you with you could save money. Okay. So that's the idea. uh I want to give some time for question. So further work we want to use it internally. We are doing good job but I can tell you our audit takes us long time. I know thanks our audit takes us long time. So we want to shorten our audit and the idea is we're going to use this tool initially and after that add things by human and hopefully it will speed our our internal work. We also want to open source it. uh we only use entropic there are many other llm we want to support foundry and enkidna and there are some things that you cannot write in this language for example and this for example properties of internal functions and things like that so I'm almost done I just want to before I go to the question I want to don't get this talk wrong so this talk doesn't prevent we still need auditing we still need fuzzing we need everything Okay, I'm not going to I don't want to confu confuse it. This talk is actually giving you an extra security layer. You can use our tool to get to use this AI based together with our tool or fuzzy others. It just get another layer. I'm not proposing it instead of everything you have. And finally, I think it's interesting that basically AI allow us to do more automation of security. So, I'm ready to take questions. Please, please ask me some questions. Yes. [Applause] Yes. Hello. Thank you, professor, for this interesting talk. I just wanted to ask about the false positives. So, how often does it say that there's an exploit when there actually uh when a human studies it there is no exploit? So, so, so, so notice that in this case and that's something interesting. Uh, somebody could think of formal verification and and and AI as complimentary AI is very very local but it it makes mistake. Formal verification doesn't make mistake. Okay. When we prove the property up to a bug in our tool, it is proved. Okay. And we have when we have a violation of it up to a bug in the rule it is a violation otherwise you will complain a bug in our tool. So we the formal verification has a scaling issue but the formal verification always give you the exact answer. LLM give you a lot of noise but but this noise you can you can you can check. Of course it could be confusing if it give you a bug which is not understandable. But the the false positive are are are being uh sort of handled by the by the formal verification tool. Um very interesting talk. Thank you. Um one of the slides said your AI model already had uh knowledge of DeFi. Can you talk a little bit about whether you found an existing model that had DeFi knowledge or did you train one yourself? And if you did train it, how what what is the data set you use to train? Thank you. Yes, that's a an an excellent question. So the question is how do we get AI models? So it's very clear that in many domain including us there's very small data companies like open AI they do ma a magic job by basically putting a lot of smart engineers to to collect this data. We are at the moment using very very simple data. It's based on all open source and it's based on the repository that we have and of course we have a little bias to use our thing because we understand it more but of course we we we we want to use more and we want to leverage community and at some point if we have enough budget we'll probably put engineers to to collect data and to to gather data ourselves. Thank you. It was a very nice talk. Um, I'm just wondering, I think it's a bit related to the exploit question, but separately. How many of the specifications that were generated by AI were actually correct? Did they actually capture what you were intending from whichever function you were analyzing at time? So, does it does it generate a lot of uh completely garbage even things that are might not be syntactically correct even? So, so for us the one thing that we did for good and for bad we we picked a very very simple language for writing the property. So if you if you generate CVL you're definitely right. CVL is very expressive. It's allowed to write. We decided to to go about the long hanging foot. So by definition the the properties that we infer are small. But I want to be fair with you. We have not done enough experiment to say I imagine you're probably right at some point. It depends also which audit we go and depends on which thing we go. I'm sure there will be some noise. I totally agree and we have to see. Okay. Thank you. Thanks everybody. Thank you for the talk. We will have this work very soon available. Thank you very much.",
    "text_length": 17538,
    "word_count": 3317
  },
  "segments": [
    {
      "start": 5.64,
      "duration": 2.44,
      "text": "[Music]",
      "timestamp": "00:05"
    },
    {
      "start": 8.08,
      "duration": 2.96,
      "text": "Good afternoon and thank you for coming.",
      "timestamp": "00:08"
    },
    {
      "start": 11.04,
      "duration": 2.24,
      "text": "I'm sorry like the previous speaker I've",
      "timestamp": "00:11"
    },
    {
      "start": 13.28,
      "duration": 2.96,
      "text": "changed the talk uh but I think I made",
      "timestamp": "00:13"
    },
    {
      "start": 16.24,
      "duration": 3.76,
      "text": "it more interesting uh for you to judge.",
      "timestamp": "00:16"
    },
    {
      "start": 20.0,
      "duration": 2.0,
      "text": "So I'm not going to talk about how you",
      "timestamp": "00:20"
    },
    {
      "start": 22.0,
      "duration": 3.519,
      "text": "use a formal verification to secure AI.",
      "timestamp": "00:22"
    },
    {
      "start": 25.519,
      "duration": 1.76,
      "text": "I'm going to talk about the opposite.",
      "timestamp": "00:25"
    },
    {
      "start": 27.279,
      "duration": 2.16,
      "text": "I'm going to talk about how to make use",
      "timestamp": "00:27"
    },
    {
      "start": 29.439,
      "duration": 2.481,
      "text": "AI to make formal verification easier.",
      "timestamp": "00:29"
    },
    {
      "start": 31.92,
      "duration": 1.84,
      "text": "And actually this talk applied not just",
      "timestamp": "00:31"
    },
    {
      "start": 33.76,
      "duration": 2.56,
      "text": "for formal verification, it applies for",
      "timestamp": "00:33"
    },
    {
      "start": 36.32,
      "duration": 2.48,
      "text": "fuzzing and others. So please listen,",
      "timestamp": "00:36"
    },
    {
      "start": 38.8,
      "duration": 2.32,
      "text": "I'll be uh I'll save some time for",
      "timestamp": "00:38"
    },
    {
      "start": 41.12,
      "duration": 2.24,
      "text": "questions.",
      "timestamp": "00:41"
    },
    {
      "start": 43.36,
      "duration": 2.64,
      "text": "So about me, I'm a co-founder of Satara.",
      "timestamp": "00:43"
    },
    {
      "start": 46.0,
      "duration": 3.12,
      "text": "Feel free to ping me.",
      "timestamp": "00:46"
    },
    {
      "start": 49.12,
      "duration": 2.4,
      "text": "This talk is actually not by done by me.",
      "timestamp": "00:49"
    },
    {
      "start": 51.52,
      "duration": 2.0,
      "text": "It's done by three amazing people on our",
      "timestamp": "00:51"
    },
    {
      "start": 53.52,
      "duration": 2.879,
      "text": "team. uh Naftali",
      "timestamp": "00:53"
    },
    {
      "start": 56.399,
      "duration": 2.8,
      "text": "uh Yoslav and Yannes and they're not",
      "timestamp": "00:56"
    },
    {
      "start": 59.199,
      "duration": 1.761,
      "text": "here but are available to answer",
      "timestamp": "00:59"
    },
    {
      "start": 60.96,
      "duration": 2.239,
      "text": "questions. It's a small project that we",
      "timestamp": "01:00"
    },
    {
      "start": 63.199,
      "duration": 2.24,
      "text": "have done we are incorporating into our",
      "timestamp": "01:03"
    },
    {
      "start": 65.439,
      "duration": 2.401,
      "text": "open source tool. Uh we can give you the",
      "timestamp": "01:05"
    },
    {
      "start": 67.84,
      "duration": 2.56,
      "text": "source already or if you want you get it",
      "timestamp": "01:07"
    },
    {
      "start": 70.4,
      "duration": 2.399,
      "text": "as part of the open source repository of",
      "timestamp": "01:10"
    },
    {
      "start": 72.799,
      "duration": 3.041,
      "text": "the set approver.",
      "timestamp": "01:12"
    },
    {
      "start": 75.84,
      "duration": 2.08,
      "text": "So there are many many tools in this",
      "timestamp": "01:15"
    },
    {
      "start": 77.92,
      "duration": 2.16,
      "text": "space and we think that this work",
      "timestamp": "01:17"
    },
    {
      "start": 80.08,
      "duration": 3.12,
      "text": "applies to many of them. Here we listed",
      "timestamp": "01:20"
    },
    {
      "start": 83.2,
      "duration": 3.44,
      "text": "some of them. So Slater is the sort of a",
      "timestamp": "01:23"
    },
    {
      "start": 86.64,
      "duration": 3.04,
      "text": "very mature static analysis tool. Fairly",
      "timestamp": "01:26"
    },
    {
      "start": 89.68,
      "duration": 3.2,
      "text": "easy to use. The problem doesn't provide",
      "timestamp": "01:29"
    },
    {
      "start": 92.88,
      "duration": 2.64,
      "text": "a lot of security. It's very very",
      "timestamp": "01:32"
    },
    {
      "start": 95.52,
      "duration": 2.559,
      "text": "general. Also it's hard to use it for",
      "timestamp": "01:35"
    },
    {
      "start": 98.079,
      "duration": 4.481,
      "text": "bugs and you can integrate into CI. Uh",
      "timestamp": "01:38"
    },
    {
      "start": 102.56,
      "duration": 3.199,
      "text": "Foundry is a fing tool. There's also",
      "timestamp": "01:42"
    },
    {
      "start": 105.759,
      "duration": 2.161,
      "text": "Enkidna. These are good tools. they give",
      "timestamp": "01:45"
    },
    {
      "start": 107.92,
      "duration": 2.879,
      "text": "more coverage than static analysis but a",
      "timestamp": "01:47"
    },
    {
      "start": 110.799,
      "duration": 2.721,
      "text": "bit harder to use. Then there's Kalin",
      "timestamp": "01:50"
    },
    {
      "start": 113.52,
      "duration": 3.84,
      "text": "interactive term provers. Uh uh there's",
      "timestamp": "01:53"
    },
    {
      "start": 117.36,
      "duration": 2.16,
      "text": "also audit agent which is a recent and",
      "timestamp": "01:57"
    },
    {
      "start": 119.52,
      "duration": 1.76,
      "text": "many others. I'm sorry I didn't have to",
      "timestamp": "01:59"
    },
    {
      "start": 121.28,
      "duration": 2.32,
      "text": "list them all but these are tools based",
      "timestamp": "02:01"
    },
    {
      "start": 123.6,
      "duration": 3.76,
      "text": "on AI to find bugs and uh they actually",
      "timestamp": "02:03"
    },
    {
      "start": 127.36,
      "duration": 2.0,
      "text": "I listed the one by nethermind but there",
      "timestamp": "02:07"
    },
    {
      "start": 129.36,
      "duration": 2.959,
      "text": "are others. I apologize and our own tool",
      "timestamp": "02:09"
    },
    {
      "start": 132.319,
      "duration": 1.761,
      "text": "prover",
      "timestamp": "02:12"
    },
    {
      "start": 134.08,
      "duration": 2.32,
      "text": "which is open source. This is actually a",
      "timestamp": "02:14"
    },
    {
      "start": 136.4,
      "duration": 2.16,
      "text": "tool that we think it's very very usable",
      "timestamp": "02:16"
    },
    {
      "start": 138.56,
      "duration": 3.039,
      "text": "for developers. It checks the code at",
      "timestamp": "02:18"
    },
    {
      "start": 141.599,
      "duration": 1.681,
      "text": "the moment. We made it available for",
      "timestamp": "02:21"
    },
    {
      "start": 143.28,
      "duration": 3.2,
      "text": "EVM, SVM and web assembly and it's",
      "timestamp": "02:23"
    },
    {
      "start": 146.48,
      "duration": 2.08,
      "text": "basically give you high security and",
      "timestamp": "02:26"
    },
    {
      "start": 148.56,
      "duration": 2.56,
      "text": "it's still easier to use. But the the",
      "timestamp": "02:28"
    },
    {
      "start": 151.12,
      "duration": 1.92,
      "text": "purpose of this talk it make it even",
      "timestamp": "02:31"
    },
    {
      "start": 153.04,
      "duration": 3.04,
      "text": "more easier.",
      "timestamp": "02:33"
    },
    {
      "start": 156.08,
      "duration": 3.12,
      "text": "So maybe just sort of talk about manual",
      "timestamp": "02:36"
    },
    {
      "start": 159.2,
      "duration": 2.16,
      "text": "what are the things that people are use",
      "timestamp": "02:39"
    },
    {
      "start": 161.36,
      "duration": 4.239,
      "text": "for security. So uh obviously people are",
      "timestamp": "02:41"
    },
    {
      "start": 165.599,
      "duration": 1.841,
      "text": "using manual auditing this is the",
      "timestamp": "02:45"
    },
    {
      "start": 167.44,
      "duration": 2.24,
      "text": "standard and we know that auditors can",
      "timestamp": "02:47"
    },
    {
      "start": 169.68,
      "duration": 2.48,
      "text": "find a lot of issues but the problem is",
      "timestamp": "02:49"
    },
    {
      "start": 172.16,
      "duration": 2.48,
      "text": "auditing it's a human process so it's",
      "timestamp": "02:52"
    },
    {
      "start": 174.64,
      "duration": 2.0,
      "text": "errorprone and it could be expensive and",
      "timestamp": "02:54"
    },
    {
      "start": 176.64,
      "duration": 3.599,
      "text": "time consuming testing fuzzing is great",
      "timestamp": "02:56"
    },
    {
      "start": 180.239,
      "duration": 3.041,
      "text": "you can automate it but you miss some of",
      "timestamp": "03:00"
    },
    {
      "start": 183.28,
      "duration": 2.0,
      "text": "the bugs and it's very hard it's also",
      "timestamp": "03:03"
    },
    {
      "start": 185.28,
      "duration": 3.36,
      "text": "can can be expensive formal verification",
      "timestamp": "03:05"
    },
    {
      "start": 188.64,
      "duration": 2.08,
      "text": "has been used in other industry for",
      "timestamp": "03:08"
    },
    {
      "start": 190.72,
      "duration": 2.4,
      "text": "example safety critical system it's",
      "timestamp": "03:10"
    },
    {
      "start": 193.12,
      "duration": 1.68,
      "text": "provide a guarantee but it's really",
      "timestamp": "03:13"
    },
    {
      "start": 194.8,
      "duration": 2.0,
      "text": "really expensive in terms of human",
      "timestamp": "03:14"
    },
    {
      "start": 196.8,
      "duration": 3.439,
      "text": "effort and computational effort and AI",
      "timestamp": "03:16"
    },
    {
      "start": 200.239,
      "duration": 2.08,
      "text": "checks it's it's something which of",
      "timestamp": "03:20"
    },
    {
      "start": 202.319,
      "duration": 2.961,
      "text": "course exist before but now with the AI",
      "timestamp": "03:22"
    },
    {
      "start": 205.28,
      "duration": 4.0,
      "text": "it's getting more and more popular",
      "timestamp": "03:25"
    },
    {
      "start": 209.28,
      "duration": 2.319,
      "text": "so what we want to do we want to",
      "timestamp": "03:29"
    },
    {
      "start": 211.599,
      "duration": 2.481,
      "text": "integrate it into formal verification",
      "timestamp": "03:31"
    },
    {
      "start": 214.08,
      "duration": 1.36,
      "text": "this is the definition of formal",
      "timestamp": "03:34"
    },
    {
      "start": 215.44,
      "duration": 2.0,
      "text": "verification come from Wikipedia it's",
      "timestamp": "03:35"
    },
    {
      "start": 217.44,
      "duration": 2.159,
      "text": "this method to give you a guarantee",
      "timestamp": "03:37"
    },
    {
      "start": 219.599,
      "duration": 2.64,
      "text": "about your code",
      "timestamp": "03:39"
    },
    {
      "start": 222.239,
      "duration": 1.841,
      "text": "but we take from this the actually",
      "timestamp": "03:42"
    },
    {
      "start": 224.08,
      "duration": 2.48,
      "text": "definition that was done given to us by",
      "timestamp": "03:44"
    },
    {
      "start": 226.56,
      "duration": 3.52,
      "text": "Ernesto uh from BGD it's the mechanism",
      "timestamp": "03:46"
    },
    {
      "start": 230.08,
      "duration": 2.239,
      "text": "that actually increase your security or",
      "timestamp": "03:50"
    },
    {
      "start": 232.319,
      "duration": 2.081,
      "text": "your confidence in your code so somehow",
      "timestamp": "03:52"
    },
    {
      "start": 234.4,
      "duration": 2.399,
      "text": "it's something that allow you to go to",
      "timestamp": "03:54"
    },
    {
      "start": 236.799,
      "duration": 2.64,
      "text": "the unknown part of your code it give",
      "timestamp": "03:56"
    },
    {
      "start": 239.439,
      "duration": 4.321,
      "text": "you more security of your code",
      "timestamp": "03:59"
    },
    {
      "start": 243.76,
      "duration": 3.36,
      "text": "uh so it's increase your trust",
      "timestamp": "04:03"
    },
    {
      "start": 247.12,
      "duration": 2.399,
      "text": "and this is of course a nice quote by",
      "timestamp": "04:07"
    },
    {
      "start": 249.519,
      "duration": 2.481,
      "text": "Vital Talic this came sort of showed",
      "timestamp": "04:09"
    },
    {
      "start": 252.0,
      "duration": 2.56,
      "text": "that if you use form verification open",
      "timestamp": "04:12"
    },
    {
      "start": 254.56,
      "duration": 1.679,
      "text": "source you increase the trust in the",
      "timestamp": "04:14"
    },
    {
      "start": 256.239,
      "duration": 2.0,
      "text": "software",
      "timestamp": "04:16"
    },
    {
      "start": 258.239,
      "duration": 3.441,
      "text": "and also uh to uh looking actually after",
      "timestamp": "04:18"
    },
    {
      "start": 261.68,
      "duration": 2.079,
      "text": "using our approver essentially saying",
      "timestamp": "04:21"
    },
    {
      "start": 263.759,
      "duration": 2.481,
      "text": "that this can do can be also useful for",
      "timestamp": "04:23"
    },
    {
      "start": 266.24,
      "duration": 3.64,
      "text": "the Solana",
      "timestamp": "04:26"
    },
    {
      "start": 270.88,
      "duration": 2.56,
      "text": "uh",
      "timestamp": "04:30"
    },
    {
      "start": 273.44,
      "duration": 2.319,
      "text": "okay so for the purpose of this talk I'm",
      "timestamp": "04:33"
    },
    {
      "start": 275.759,
      "duration": 1.601,
      "text": "going to do something which basically",
      "timestamp": "04:35"
    },
    {
      "start": 277.36,
      "duration": 1.76,
      "text": "I'm saying formal verification is good",
      "timestamp": "04:37"
    },
    {
      "start": 279.12,
      "duration": 2.799,
      "text": "for proofs but it's also good for bug",
      "timestamp": "04:39"
    },
    {
      "start": 281.919,
      "duration": 1.921,
      "text": "finding and I'm going to show you that",
      "timestamp": "04:41"
    },
    {
      "start": 283.84,
      "duration": 1.68,
      "text": "actually formal verification in addition",
      "timestamp": "04:43"
    },
    {
      "start": 285.52,
      "duration": 2.399,
      "text": "to the fact that it used for proof it",
      "timestamp": "04:45"
    },
    {
      "start": 287.919,
      "duration": 4.321,
      "text": "it's actually useful for bug finding",
      "timestamp": "04:47"
    },
    {
      "start": 292.24,
      "duration": 2.399,
      "text": "okay so why actually do we want to use",
      "timestamp": "04:52"
    },
    {
      "start": 294.639,
      "duration": 2.241,
      "text": "AI for formal verification and why is",
      "timestamp": "04:54"
    },
    {
      "start": 296.88,
      "duration": 2.319,
      "text": "formal verification not heavily used if",
      "timestamp": "04:56"
    },
    {
      "start": 299.199,
      "duration": 2.72,
      "text": "it's so useful so there are many answers",
      "timestamp": "04:59"
    },
    {
      "start": 301.919,
      "duration": 2.481,
      "text": "but I think one particular answer that",
      "timestamp": "05:01"
    },
    {
      "start": 304.4,
      "duration": 2.72,
      "text": "formal verification is considered hard",
      "timestamp": "05:04"
    },
    {
      "start": 307.12,
      "duration": 1.84,
      "text": "and a lot of people I've studied",
      "timestamp": "05:07"
    },
    {
      "start": 308.96,
      "duration": 1.84,
      "text": "computer formal verification for a long",
      "timestamp": "05:08"
    },
    {
      "start": 310.8,
      "duration": 1.36,
      "text": "time. They say this is sort of the",
      "timestamp": "05:10"
    },
    {
      "start": 312.16,
      "duration": 2.56,
      "text": "hardest problem in computer science and",
      "timestamp": "05:12"
    },
    {
      "start": 314.72,
      "duration": 1.68,
      "text": "it's hard from a computational",
      "timestamp": "05:14"
    },
    {
      "start": 316.4,
      "duration": 1.84,
      "text": "perspective but it's also hard in terms",
      "timestamp": "05:16"
    },
    {
      "start": 318.24,
      "duration": 1.679,
      "text": "of learning.",
      "timestamp": "05:18"
    },
    {
      "start": 319.919,
      "duration": 2.881,
      "text": "Okay. So these are many things that sort",
      "timestamp": "05:19"
    },
    {
      "start": 322.8,
      "duration": 2.8,
      "text": "of go to you that you are starting from",
      "timestamp": "05:22"
    },
    {
      "start": 325.6,
      "duration": 2.319,
      "text": "verification. Probably the most",
      "timestamp": "05:25"
    },
    {
      "start": 327.919,
      "duration": 2.401,
      "text": "difficult part is the mindset. You have",
      "timestamp": "05:27"
    },
    {
      "start": 330.32,
      "duration": 2.319,
      "text": "to change your mindset. when you are",
      "timestamp": "05:30"
    },
    {
      "start": 332.639,
      "duration": 2.641,
      "text": "hacker or when you are programmer you",
      "timestamp": "05:32"
    },
    {
      "start": 335.28,
      "duration": 1.919,
      "text": "have some kind of adversarial thinking",
      "timestamp": "05:35"
    },
    {
      "start": 337.199,
      "duration": 2.401,
      "text": "which is very very useful you think how",
      "timestamp": "05:37"
    },
    {
      "start": 339.6,
      "duration": 2.72,
      "text": "do I break it when you're doing formal",
      "timestamp": "05:39"
    },
    {
      "start": 342.32,
      "duration": 1.92,
      "text": "verification you need this adversarial",
      "timestamp": "05:42"
    },
    {
      "start": 344.24,
      "duration": 1.36,
      "text": "thinking but you also need to think",
      "timestamp": "05:44"
    },
    {
      "start": 345.6,
      "duration": 2.879,
      "text": "about what properties is and actually",
      "timestamp": "05:45"
    },
    {
      "start": 348.479,
      "duration": 1.841,
      "text": "some people say that the bad hackers are",
      "timestamp": "05:48"
    },
    {
      "start": 350.32,
      "duration": 2.48,
      "text": "the ones which think about both but it's",
      "timestamp": "05:50"
    },
    {
      "start": 352.8,
      "duration": 2.56,
      "text": "sometimes hard to find so you need to",
      "timestamp": "05:52"
    },
    {
      "start": 355.36,
      "duration": 2.16,
      "text": "think in terms of what is the code is",
      "timestamp": "05:55"
    },
    {
      "start": 357.52,
      "duration": 3.04,
      "text": "expected to do and then you can use it",
      "timestamp": "05:57"
    },
    {
      "start": 360.56,
      "duration": 3.199,
      "text": "with with tools or with with humans to",
      "timestamp": "06:00"
    },
    {
      "start": 363.759,
      "duration": 2.56,
      "text": "break this thing. So you need to think",
      "timestamp": "06:03"
    },
    {
      "start": 366.319,
      "duration": 2.241,
      "text": "and and another thing that you need to",
      "timestamp": "06:06"
    },
    {
      "start": 368.56,
      "duration": 2.24,
      "text": "do you need to think declaratively you",
      "timestamp": "06:08"
    },
    {
      "start": 370.8,
      "duration": 1.76,
      "text": "need to think of what is this code as",
      "timestamp": "06:10"
    },
    {
      "start": 372.56,
      "duration": 2.56,
      "text": "opposed to imperatively and we know it's",
      "timestamp": "06:12"
    },
    {
      "start": 375.12,
      "duration": 2.16,
      "text": "not it's incomparable you know we think",
      "timestamp": "06:15"
    },
    {
      "start": 377.28,
      "duration": 2.32,
      "text": "imperatively I go someplace I need to do",
      "timestamp": "06:17"
    },
    {
      "start": 379.6,
      "duration": 2.159,
      "text": "something it's sometimes more natural",
      "timestamp": "06:19"
    },
    {
      "start": 381.759,
      "duration": 2.72,
      "text": "but somehow and for example when we work",
      "timestamp": "06:21"
    },
    {
      "start": 384.479,
      "duration": 2.081,
      "text": "with client sometimes we come with a",
      "timestamp": "06:24"
    },
    {
      "start": 386.56,
      "duration": 1.68,
      "text": "property we say we wish we knew it",
      "timestamp": "06:26"
    },
    {
      "start": 388.24,
      "duration": 2.16,
      "text": "before we wrote the code because you",
      "timestamp": "06:28"
    },
    {
      "start": 390.4,
      "duration": 1.359,
      "text": "have to come with this kind of",
      "timestamp": "06:30"
    },
    {
      "start": 391.759,
      "duration": 2.16,
      "text": "properties and it's hard for people to",
      "timestamp": "06:31"
    },
    {
      "start": 393.919,
      "duration": 1.521,
      "text": "do",
      "timestamp": "06:33"
    },
    {
      "start": 395.44,
      "duration": 3.28,
      "text": "As a result, sometimes people use abuse",
      "timestamp": "06:35"
    },
    {
      "start": 398.72,
      "duration": 2.96,
      "text": "formal verification. Our tools are that",
      "timestamp": "06:38"
    },
    {
      "start": 401.68,
      "duration": 1.84,
      "text": "and there are many way you can abuse",
      "timestamp": "06:41"
    },
    {
      "start": 403.52,
      "duration": 2.08,
      "text": "formal verification. For example, you",
      "timestamp": "06:43"
    },
    {
      "start": 405.6,
      "duration": 1.92,
      "text": "can prove things which is tutology. You",
      "timestamp": "06:45"
    },
    {
      "start": 407.52,
      "duration": 2.0,
      "text": "prove that seven is greater than five.",
      "timestamp": "06:47"
    },
    {
      "start": 409.52,
      "duration": 1.84,
      "text": "That's great. But it's not saying",
      "timestamp": "06:49"
    },
    {
      "start": 411.36,
      "duration": 2.48,
      "text": "anything about your code.",
      "timestamp": "06:51"
    },
    {
      "start": 413.84,
      "duration": 2.88,
      "text": "And also diagnosing formal verification",
      "timestamp": "06:53"
    },
    {
      "start": 416.72,
      "duration": 1.68,
      "text": "is hard because basically formal",
      "timestamp": "06:56"
    },
    {
      "start": 418.4,
      "duration": 1.76,
      "text": "verification can do something very very",
      "timestamp": "06:58"
    },
    {
      "start": 420.16,
      "duration": 2.56,
      "text": "useful to you. But then it gives you an",
      "timestamp": "07:00"
    },
    {
      "start": 422.72,
      "duration": 1.919,
      "text": "example and it's hard for you to",
      "timestamp": "07:02"
    },
    {
      "start": 424.639,
      "duration": 2.641,
      "text": "understand what it means. So that's why",
      "timestamp": "07:04"
    },
    {
      "start": 427.28,
      "duration": 2.8,
      "text": "formal verification and we see some kind",
      "timestamp": "07:07"
    },
    {
      "start": 430.08,
      "duration": 2.08,
      "text": "of a learning care. Somebody learns",
      "timestamp": "07:10"
    },
    {
      "start": 432.16,
      "duration": 2.64,
      "text": "formalification and it takes him or her",
      "timestamp": "07:12"
    },
    {
      "start": 434.8,
      "duration": 3.04,
      "text": "some time.",
      "timestamp": "07:14"
    },
    {
      "start": 437.84,
      "duration": 2.16,
      "text": "So what do we want to do in the purpose",
      "timestamp": "07:17"
    },
    {
      "start": 440.0,
      "duration": 2.639,
      "text": "of this talk and we have only done baby",
      "timestamp": "07:20"
    },
    {
      "start": 442.639,
      "duration": 3.441,
      "text": "step. We have actually added this AI",
      "timestamp": "07:22"
    },
    {
      "start": 446.08,
      "duration": 2.48,
      "text": "based formal verification. The idea is a",
      "timestamp": "07:26"
    },
    {
      "start": 448.56,
      "duration": 2.96,
      "text": "formal verification but not the human is",
      "timestamp": "07:28"
    },
    {
      "start": 451.52,
      "duration": 1.92,
      "text": "writing the properties. The system is",
      "timestamp": "07:31"
    },
    {
      "start": 453.44,
      "duration": 2.319,
      "text": "writing the properties. So the system is",
      "timestamp": "07:33"
    },
    {
      "start": 455.759,
      "duration": 3.201,
      "text": "trying to infer the properties that a",
      "timestamp": "07:35"
    },
    {
      "start": 458.96,
      "duration": 3.84,
      "text": "smart human is writing.",
      "timestamp": "07:38"
    },
    {
      "start": 462.8,
      "duration": 3.119,
      "text": "Okay. So how does it work?",
      "timestamp": "07:42"
    },
    {
      "start": 465.919,
      "duration": 3.12,
      "text": "So we start with the with the general",
      "timestamp": "07:45"
    },
    {
      "start": 469.039,
      "duration": 3.041,
      "text": "defi knowledge. We basically have a data",
      "timestamp": "07:49"
    },
    {
      "start": 472.08,
      "duration": 2.72,
      "text": "base of information. We take the design",
      "timestamp": "07:52"
    },
    {
      "start": 474.8,
      "duration": 3.519,
      "text": "of the code. We take the code itself and",
      "timestamp": "07:54"
    },
    {
      "start": 478.319,
      "duration": 2.081,
      "text": "we also take any documentation that you",
      "timestamp": "07:58"
    },
    {
      "start": 480.4,
      "duration": 2.239,
      "text": "have in mind.",
      "timestamp": "08:00"
    },
    {
      "start": 482.639,
      "duration": 2.321,
      "text": "And this is actually where the smart",
      "timestamp": "08:02"
    },
    {
      "start": 484.96,
      "duration": 3.04,
      "text": "part start. You infer a property. We",
      "timestamp": "08:04"
    },
    {
      "start": 488.0,
      "duration": 2.0,
      "text": "have a very simple language that we",
      "timestamp": "08:08"
    },
    {
      "start": 490.0,
      "duration": 1.919,
      "text": "which is you can think of something like",
      "timestamp": "08:10"
    },
    {
      "start": 491.919,
      "duration": 2.56,
      "text": "swel or something like this. It's a it's",
      "timestamp": "08:11"
    },
    {
      "start": 494.479,
      "duration": 1.681,
      "text": "a language that allow you things to",
      "timestamp": "08:14"
    },
    {
      "start": 496.16,
      "duration": 1.599,
      "text": "write things that you cannot exactly",
      "timestamp": "08:16"
    },
    {
      "start": 497.759,
      "duration": 2.961,
      "text": "code but it's similar to code. It",
      "timestamp": "08:17"
    },
    {
      "start": 500.72,
      "duration": 2.8,
      "text": "describe the requirement on the code.",
      "timestamp": "08:20"
    },
    {
      "start": 503.52,
      "duration": 3.84,
      "text": "I'll give you an example soon.",
      "timestamp": "08:23"
    },
    {
      "start": 508.56,
      "duration": 2.319,
      "text": "Then we use a normal compiler. We",
      "timestamp": "08:28"
    },
    {
      "start": 510.879,
      "duration": 1.681,
      "text": "essentially this is not very smart but",
      "timestamp": "08:30"
    },
    {
      "start": 512.56,
      "duration": 1.279,
      "text": "still you have to do it. You have to",
      "timestamp": "08:32"
    },
    {
      "start": 513.839,
      "duration": 2.32,
      "text": "compile into the CV into our own domain",
      "timestamp": "08:33"
    },
    {
      "start": 516.159,
      "duration": 2.161,
      "text": "specific language for writing the",
      "timestamp": "08:36"
    },
    {
      "start": 518.32,
      "duration": 2.079,
      "text": "properties.",
      "timestamp": "08:38"
    },
    {
      "start": 520.399,
      "duration": 2.08,
      "text": "And then we run the ser approver. This",
      "timestamp": "08:40"
    },
    {
      "start": 522.479,
      "duration": 2.081,
      "text": "is an automatic tool. You can write it",
      "timestamp": "08:42"
    },
    {
      "start": 524.56,
      "duration": 2.0,
      "text": "on the cloud.",
      "timestamp": "08:44"
    },
    {
      "start": 526.56,
      "duration": 2.48,
      "text": "If it verifies the property you know it",
      "timestamp": "08:46"
    },
    {
      "start": 529.04,
      "duration": 1.919,
      "text": "verifies. So if you trust it you",
      "timestamp": "08:49"
    },
    {
      "start": 530.959,
      "duration": 1.921,
      "text": "increase your confidence in the code.",
      "timestamp": "08:50"
    },
    {
      "start": 532.88,
      "duration": 1.68,
      "text": "The interesting thing what happened?",
      "timestamp": "08:52"
    },
    {
      "start": 534.56,
      "duration": 2.48,
      "text": "What happened with this violated there?",
      "timestamp": "08:54"
    },
    {
      "start": 537.04,
      "duration": 2.56,
      "text": "We use the AI again. Why do we use the",
      "timestamp": "08:57"
    },
    {
      "start": 539.6,
      "duration": 2.239,
      "text": "AI again? Because we want the AI to help",
      "timestamp": "08:59"
    },
    {
      "start": 541.839,
      "duration": 2.481,
      "text": "us diagnose what is the problem because",
      "timestamp": "09:01"
    },
    {
      "start": 544.32,
      "duration": 2.4,
      "text": "we want to AI to to explain actually and",
      "timestamp": "09:04"
    },
    {
      "start": 546.72,
      "duration": 3.119,
      "text": "AI are very good but they are very local",
      "timestamp": "09:06"
    },
    {
      "start": 549.839,
      "duration": 2.56,
      "text": "and they can make terrible mistakes but",
      "timestamp": "09:09"
    },
    {
      "start": 552.399,
      "duration": 2.0,
      "text": "it's not so bad. We run it and we will",
      "timestamp": "09:12"
    },
    {
      "start": 554.399,
      "duration": 2.321,
      "text": "check it. Okay. So basically this give",
      "timestamp": "09:14"
    },
    {
      "start": 556.72,
      "duration": 2.88,
      "text": "you this potential exploit scenario that",
      "timestamp": "09:16"
    },
    {
      "start": 559.6,
      "duration": 3.919,
      "text": "a human needs to invest to to check",
      "timestamp": "09:19"
    },
    {
      "start": 563.519,
      "duration": 3.76,
      "text": "and then if this error is real then you",
      "timestamp": "09:23"
    },
    {
      "start": 567.279,
      "duration": 2.56,
      "text": "in fact apply the manual fix and then",
      "timestamp": "09:27"
    },
    {
      "start": 569.839,
      "duration": 4.041,
      "text": "you write the set approver.",
      "timestamp": "09:29"
    },
    {
      "start": 574.399,
      "duration": 2.961,
      "text": "So I give you a few examples as I said",
      "timestamp": "09:34"
    },
    {
      "start": 577.36,
      "duration": 2.88,
      "text": "we are doing really really step at this",
      "timestamp": "09:37"
    },
    {
      "start": 580.24,
      "duration": 3.52,
      "text": "point. So please bear in mind that we",
      "timestamp": "09:40"
    },
    {
      "start": 583.76,
      "duration": 2.48,
      "text": "need to run it on way more examples but",
      "timestamp": "09:43"
    },
    {
      "start": 586.24,
      "duration": 2.8,
      "text": "we have been running it on few examples",
      "timestamp": "09:46"
    },
    {
      "start": 589.04,
      "duration": 2.0,
      "text": "based on things for the public domain",
      "timestamp": "09:49"
    },
    {
      "start": 591.04,
      "duration": 2.08,
      "text": "and based on many audits and formal",
      "timestamp": "09:51"
    },
    {
      "start": 593.12,
      "duration": 3.44,
      "text": "verification project that we have done.",
      "timestamp": "09:53"
    },
    {
      "start": 596.56,
      "duration": 2.32,
      "text": "So this is a of course example everybody",
      "timestamp": "09:56"
    },
    {
      "start": 598.88,
      "duration": 3.04,
      "text": "knows is the open zeppelin transfer.",
      "timestamp": "09:58"
    },
    {
      "start": 601.92,
      "duration": 2.4,
      "text": "It's a baby example",
      "timestamp": "10:01"
    },
    {
      "start": 604.32,
      "duration": 2.72,
      "text": "but it's good to show you what we do. So",
      "timestamp": "10:04"
    },
    {
      "start": 607.04,
      "duration": 2.479,
      "text": "we take the code, we take the transfer",
      "timestamp": "10:07"
    },
    {
      "start": 609.519,
      "duration": 4.081,
      "text": "function, we basically oops okay we take",
      "timestamp": "10:09"
    },
    {
      "start": 613.6,
      "duration": 1.679,
      "text": "the the code we take the transfer",
      "timestamp": "10:13"
    },
    {
      "start": 615.279,
      "duration": 3.441,
      "text": "function and what we do",
      "timestamp": "10:15"
    },
    {
      "start": 618.72,
      "duration": 2.48,
      "text": "we take the code itself and we hide it",
      "timestamp": "10:18"
    },
    {
      "start": 621.2,
      "duration": 3.36,
      "text": "we don't show the AI the implementation",
      "timestamp": "10:21"
    },
    {
      "start": 624.56,
      "duration": 1.76,
      "text": "itself because we want it actually to",
      "timestamp": "10:24"
    },
    {
      "start": 626.32,
      "duration": 1.44,
      "text": "find something which is the intended",
      "timestamp": "10:26"
    },
    {
      "start": 627.76,
      "duration": 2.639,
      "text": "behavior not the executed behavior but",
      "timestamp": "10:27"
    },
    {
      "start": 630.399,
      "duration": 2.081,
      "text": "we show it all the other part of the",
      "timestamp": "10:30"
    },
    {
      "start": 632.48,
      "duration": 2.32,
      "text": "code and then we also show of course the",
      "timestamp": "10:32"
    },
    {
      "start": 634.8,
      "duration": 2.96,
      "text": "documentation and We ask the AI to infer",
      "timestamp": "10:34"
    },
    {
      "start": 637.76,
      "duration": 2.24,
      "text": "what is the intended behavior of this",
      "timestamp": "10:37"
    },
    {
      "start": 640.0,
      "duration": 2.959,
      "text": "code.",
      "timestamp": "10:40"
    },
    {
      "start": 642.959,
      "duration": 2.641,
      "text": "So this is what we do. You see this",
      "timestamp": "10:42"
    },
    {
      "start": 645.6,
      "duration": 2.72,
      "text": "thing.",
      "timestamp": "10:45"
    },
    {
      "start": 648.32,
      "duration": 2.32,
      "text": "Okay. And let's see what it's inferred.",
      "timestamp": "10:48"
    },
    {
      "start": 650.64,
      "duration": 4.639,
      "text": "Oops. Some reason it doesn't move.",
      "timestamp": "10:50"
    },
    {
      "start": 655.279,
      "duration": 1.68,
      "text": "No.",
      "timestamp": "10:55"
    },
    {
      "start": 656.959,
      "duration": 4.0,
      "text": "Okay. So it infers very simple property.",
      "timestamp": "10:56"
    },
    {
      "start": 660.959,
      "duration": 2.401,
      "text": "Uh it infers that the total supply is",
      "timestamp": "11:00"
    },
    {
      "start": 663.36,
      "duration": 1.52,
      "text": "unchanged.",
      "timestamp": "11:03"
    },
    {
      "start": 664.88,
      "duration": 2.24,
      "text": "It's still a simple property you see",
      "timestamp": "11:04"
    },
    {
      "start": 667.12,
      "duration": 2.08,
      "text": "that and it also infers potential",
      "timestamp": "11:07"
    },
    {
      "start": 669.2,
      "duration": 2.8,
      "text": "exploit scenario. Okay, it's it's infers",
      "timestamp": "11:09"
    },
    {
      "start": 672.0,
      "duration": 2.32,
      "text": "that a buggy transfer might might",
      "timestamp": "11:12"
    },
    {
      "start": 674.32,
      "duration": 2.639,
      "text": "increase the total supply with allowing",
      "timestamp": "11:14"
    },
    {
      "start": 676.959,
      "duration": 2.88,
      "text": "it. So it infer both of these. It infers",
      "timestamp": "11:16"
    },
    {
      "start": 679.839,
      "duration": 2.321,
      "text": "the spec and you see this spec is not",
      "timestamp": "11:19"
    },
    {
      "start": 682.16,
      "duration": 2.16,
      "text": "actually written exactly in solidity.",
      "timestamp": "11:22"
    },
    {
      "start": 684.32,
      "duration": 1.519,
      "text": "Bear in mind we have actually some",
      "timestamp": "11:24"
    },
    {
      "start": 685.839,
      "duration": 2.161,
      "text": "extension of solidity to express some",
      "timestamp": "11:25"
    },
    {
      "start": 688.0,
      "duration": 2.16,
      "text": "things that to to to allow you to write",
      "timestamp": "11:28"
    },
    {
      "start": 690.16,
      "duration": 1.52,
      "text": "the properties but it's not the full",
      "timestamp": "11:30"
    },
    {
      "start": 691.68,
      "duration": 3.44,
      "text": "power of CVL something much weaker",
      "timestamp": "11:31"
    },
    {
      "start": 695.12,
      "duration": 2.399,
      "text": "and you see this is what it infers it's",
      "timestamp": "11:35"
    },
    {
      "start": 697.519,
      "duration": 2.481,
      "text": "a very interesting case but it's very",
      "timestamp": "11:37"
    },
    {
      "start": 700.0,
      "duration": 3.04,
      "text": "very simple we also apply to something a",
      "timestamp": "11:40"
    },
    {
      "start": 703.04,
      "duration": 3.039,
      "text": "bit more real",
      "timestamp": "11:43"
    },
    {
      "start": 706.079,
      "duration": 2.161,
      "text": "okay oh sorry this is the code which is",
      "timestamp": "11:46"
    },
    {
      "start": 708.24,
      "duration": 2.4,
      "text": "generated by our compiler you see this",
      "timestamp": "11:48"
    },
    {
      "start": 710.64,
      "duration": 2.8,
      "text": "is satura verification language if you",
      "timestamp": "11:50"
    },
    {
      "start": 713.44,
      "duration": 1.92,
      "text": "don't No satar verification language",
      "timestamp": "11:53"
    },
    {
      "start": 715.36,
      "duration": 2.479,
      "text": "ignore it there's some boilerplate code",
      "timestamp": "11:55"
    },
    {
      "start": 717.839,
      "duration": 1.68,
      "text": "it's essentially writing on the bite",
      "timestamp": "11:57"
    },
    {
      "start": 719.519,
      "duration": 2.081,
      "text": "code it is details it's details think",
      "timestamp": "11:59"
    },
    {
      "start": 721.6,
      "duration": 2.0,
      "text": "about it some it's some details but the",
      "timestamp": "12:01"
    },
    {
      "start": 723.6,
      "duration": 1.44,
      "text": "nice thing about it you don't need to",
      "timestamp": "12:03"
    },
    {
      "start": 725.04,
      "duration": 2.56,
      "text": "know that it's automatically generated",
      "timestamp": "12:05"
    },
    {
      "start": 727.6,
      "duration": 2.239,
      "text": "from the high level spec and I imagine",
      "timestamp": "12:07"
    },
    {
      "start": 729.839,
      "duration": 2.321,
      "text": "you can do it for fer like founder and",
      "timestamp": "12:09"
    },
    {
      "start": 732.16,
      "duration": 2.16,
      "text": "and kidna we have not done it but I'm",
      "timestamp": "12:12"
    },
    {
      "start": 734.32,
      "duration": 3.6,
      "text": "sure you can do something similar",
      "timestamp": "12:14"
    },
    {
      "start": 737.92,
      "duration": 3.2,
      "text": "okay so let's to look into more",
      "timestamp": "12:17"
    },
    {
      "start": 741.12,
      "duration": 2.0,
      "text": "interesting example",
      "timestamp": "12:21"
    },
    {
      "start": 743.12,
      "duration": 1.68,
      "text": "uh We work with client before they",
      "timestamp": "12:23"
    },
    {
      "start": 744.8,
      "duration": 2.32,
      "text": "deploy the code. This is a beautiful",
      "timestamp": "12:24"
    },
    {
      "start": 747.12,
      "duration": 1.519,
      "text": "client. We have been working I think for",
      "timestamp": "12:27"
    },
    {
      "start": 748.639,
      "duration": 1.841,
      "text": "four years. Balance. I'm sure everybody",
      "timestamp": "12:28"
    },
    {
      "start": 750.48,
      "duration": 2.08,
      "text": "knows them and we work with them",
      "timestamp": "12:30"
    },
    {
      "start": 752.56,
      "duration": 2.16,
      "text": "together with other auditors. And we are",
      "timestamp": "12:32"
    },
    {
      "start": 754.72,
      "duration": 1.44,
      "text": "proud of finding the most interesting",
      "timestamp": "12:34"
    },
    {
      "start": 756.16,
      "duration": 1.84,
      "text": "bugs preventing the most interesting",
      "timestamp": "12:36"
    },
    {
      "start": 758.0,
      "duration": 2.24,
      "text": "bugs. And here is a very interesting bug",
      "timestamp": "12:38"
    },
    {
      "start": 760.24,
      "duration": 2.48,
      "text": "which we prevented at this point without",
      "timestamp": "12:40"
    },
    {
      "start": 762.72,
      "duration": 3.52,
      "text": "AI with our humans of course and it's a",
      "timestamp": "12:42"
    },
    {
      "start": 766.24,
      "duration": 2.8,
      "text": "critical bug. uh I won't be able to",
      "timestamp": "12:46"
    },
    {
      "start": 769.04,
      "duration": 2.239,
      "text": "explain but the idea it's written in our",
      "timestamp": "12:49"
    },
    {
      "start": 771.279,
      "duration": 2.961,
      "text": "blog and actually acknowledged by the by",
      "timestamp": "12:51"
    },
    {
      "start": 774.24,
      "duration": 2.8,
      "text": "the by the balancer team. It's",
      "timestamp": "12:54"
    },
    {
      "start": 777.04,
      "duration": 3.12,
      "text": "essentially allow you to use the token",
      "timestamp": "12:57"
    },
    {
      "start": 780.16,
      "duration": 2.479,
      "text": "in a way that you actually steal all the",
      "timestamp": "13:00"
    },
    {
      "start": 782.639,
      "duration": 1.76,
      "text": "money. It's a very very tricky",
      "timestamp": "13:02"
    },
    {
      "start": 784.399,
      "duration": 2.721,
      "text": "situation. I I wouldn't be able to find",
      "timestamp": "13:04"
    },
    {
      "start": 787.12,
      "duration": 4.88,
      "text": "such a bug. Okay, how did we find it? So",
      "timestamp": "13:07"
    },
    {
      "start": 792.0,
      "duration": 2.0,
      "text": "we ended up writing a property. You see",
      "timestamp": "13:12"
    },
    {
      "start": 794.0,
      "duration": 2.48,
      "text": "we wrote a property. It says this is the",
      "timestamp": "13:14"
    },
    {
      "start": 796.48,
      "duration": 1.68,
      "text": "property and essentially the property",
      "timestamp": "13:16"
    },
    {
      "start": 798.16,
      "duration": 2.4,
      "text": "says that if you have shares you have",
      "timestamp": "13:18"
    },
    {
      "start": 800.56,
      "duration": 1.839,
      "text": "asset to cover for the shares. So it's a",
      "timestamp": "13:20"
    },
    {
      "start": 802.399,
      "duration": 2.401,
      "text": "very natural property",
      "timestamp": "13:22"
    },
    {
      "start": 804.8,
      "duration": 2.4,
      "text": "and then you see we write it in our CVL",
      "timestamp": "13:24"
    },
    {
      "start": 807.2,
      "duration": 2.4,
      "text": "it's an invariant. It's an invariant you",
      "timestamp": "13:27"
    },
    {
      "start": 809.6,
      "duration": 1.6,
      "text": "can write it. So it's basically you see",
      "timestamp": "13:29"
    },
    {
      "start": 811.2,
      "duration": 2.24,
      "text": "in CVL you write in variants which are",
      "timestamp": "13:31"
    },
    {
      "start": 813.44,
      "duration": 2.399,
      "text": "independent of the function. So you see",
      "timestamp": "13:33"
    },
    {
      "start": 815.839,
      "duration": 2.641,
      "text": "that here we say that if you have uh",
      "timestamp": "13:35"
    },
    {
      "start": 818.48,
      "duration": 2.799,
      "text": "total shares then you have assets. It's",
      "timestamp": "13:38"
    },
    {
      "start": 821.279,
      "duration": 3.201,
      "text": "a very very uh sort of natural property",
      "timestamp": "13:41"
    },
    {
      "start": 824.48,
      "duration": 3.28,
      "text": "and this natural property is violated in",
      "timestamp": "13:44"
    },
    {
      "start": 827.76,
      "duration": 2.48,
      "text": "a very rare situation and the prover",
      "timestamp": "13:47"
    },
    {
      "start": 830.24,
      "duration": 2.96,
      "text": "automatically find this violation but",
      "timestamp": "13:50"
    },
    {
      "start": 833.2,
      "duration": 2.24,
      "text": "the human had to write this property",
      "timestamp": "13:53"
    },
    {
      "start": 835.44,
      "duration": 2.72,
      "text": "okay so somebody in our team has to",
      "timestamp": "13:55"
    },
    {
      "start": 838.16,
      "duration": 4.239,
      "text": "write this property or okay so let's see",
      "timestamp": "13:58"
    },
    {
      "start": 842.399,
      "duration": 3.281,
      "text": "what the AI inferred so so the AI",
      "timestamp": "14:02"
    },
    {
      "start": 845.68,
      "duration": 3.519,
      "text": "inferred something actually simpler the",
      "timestamp": "14:05"
    },
    {
      "start": 849.199,
      "duration": 3.841,
      "text": "AI inferred that basically the the the",
      "timestamp": "14:09"
    },
    {
      "start": 853.04,
      "duration": 3.44,
      "text": "amount of asset doesn't change. It's",
      "timestamp": "14:13"
    },
    {
      "start": 856.48,
      "duration": 3.12,
      "text": "infer simpler property",
      "timestamp": "14:16"
    },
    {
      "start": 859.6,
      "duration": 3.28,
      "text": "and let wait a second and it's also",
      "timestamp": "14:19"
    },
    {
      "start": 862.88,
      "duration": 2.319,
      "text": "infer exploit. It's interesting. It also",
      "timestamp": "14:22"
    },
    {
      "start": 865.199,
      "duration": 2.561,
      "text": "infers an exploit. You see if the buffer",
      "timestamp": "14:25"
    },
    {
      "start": 867.76,
      "duration": 2.319,
      "text": "asset could be changed in fact it's",
      "timestamp": "14:27"
    },
    {
      "start": 870.079,
      "duration": 2.481,
      "text": "interesting it infers and it infers it",
      "timestamp": "14:30"
    },
    {
      "start": 872.56,
      "duration": 2.0,
      "text": "of course based on history of bugs that",
      "timestamp": "14:32"
    },
    {
      "start": 874.56,
      "duration": 2.0,
      "text": "happened. So basically this thing knows",
      "timestamp": "14:34"
    },
    {
      "start": 876.56,
      "duration": 2.56,
      "text": "about many many bugs that happened. So",
      "timestamp": "14:36"
    },
    {
      "start": 879.12,
      "duration": 3.12,
      "text": "the AI infer the property and infer also",
      "timestamp": "14:39"
    },
    {
      "start": 882.24,
      "duration": 2.0,
      "text": "the exploit",
      "timestamp": "14:42"
    },
    {
      "start": 884.24,
      "duration": 2.159,
      "text": "and you see this is the generated CVL",
      "timestamp": "14:44"
    },
    {
      "start": 886.399,
      "duration": 1.921,
      "text": "code. It's technical. It doesn't matter.",
      "timestamp": "14:46"
    },
    {
      "start": 888.32,
      "duration": 1.759,
      "text": "It's basically generated automatically",
      "timestamp": "14:48"
    },
    {
      "start": 890.079,
      "duration": 2.401,
      "text": "by the compiler. So it's interesting.",
      "timestamp": "14:50"
    },
    {
      "start": 892.48,
      "duration": 1.919,
      "text": "This is a case that a bug that somebody",
      "timestamp": "14:52"
    },
    {
      "start": 894.399,
      "duration": 2.321,
      "text": "could have found without using us at",
      "timestamp": "14:54"
    },
    {
      "start": 896.72,
      "duration": 1.52,
      "text": "all.",
      "timestamp": "14:56"
    },
    {
      "start": 898.24,
      "duration": 3.12,
      "text": "Okay. I can tell you with you could save",
      "timestamp": "14:58"
    },
    {
      "start": 901.36,
      "duration": 2.0,
      "text": "money.",
      "timestamp": "15:01"
    },
    {
      "start": 903.36,
      "duration": 2.479,
      "text": "Okay. So that's the idea.",
      "timestamp": "15:03"
    },
    {
      "start": 905.839,
      "duration": 2.8,
      "text": "uh I want to give some time for",
      "timestamp": "15:05"
    },
    {
      "start": 908.639,
      "duration": 3.281,
      "text": "question. So further work we want to use",
      "timestamp": "15:08"
    },
    {
      "start": 911.92,
      "duration": 2.719,
      "text": "it internally. We are doing good job but",
      "timestamp": "15:11"
    },
    {
      "start": 914.639,
      "duration": 1.76,
      "text": "I can tell you our audit takes us long",
      "timestamp": "15:14"
    },
    {
      "start": 916.399,
      "duration": 2.641,
      "text": "time. I know thanks our audit takes us",
      "timestamp": "15:16"
    },
    {
      "start": 919.04,
      "duration": 2.159,
      "text": "long time. So we want to shorten our",
      "timestamp": "15:19"
    },
    {
      "start": 921.199,
      "duration": 1.921,
      "text": "audit and the idea is we're going to use",
      "timestamp": "15:21"
    },
    {
      "start": 923.12,
      "duration": 3.12,
      "text": "this tool initially and after that add",
      "timestamp": "15:23"
    },
    {
      "start": 926.24,
      "duration": 2.159,
      "text": "things by human and hopefully it will",
      "timestamp": "15:26"
    },
    {
      "start": 928.399,
      "duration": 3.44,
      "text": "speed our our internal work. We also",
      "timestamp": "15:28"
    },
    {
      "start": 931.839,
      "duration": 2.481,
      "text": "want to open source it.",
      "timestamp": "15:31"
    },
    {
      "start": 934.32,
      "duration": 2.4,
      "text": "uh we only use entropic there are many",
      "timestamp": "15:34"
    },
    {
      "start": 936.72,
      "duration": 4.08,
      "text": "other llm we want to support foundry and",
      "timestamp": "15:36"
    },
    {
      "start": 940.8,
      "duration": 2.32,
      "text": "enkidna and there are some things that",
      "timestamp": "15:40"
    },
    {
      "start": 943.12,
      "duration": 2.159,
      "text": "you cannot write in this language for",
      "timestamp": "15:43"
    },
    {
      "start": 945.279,
      "duration": 2.081,
      "text": "example and this for example properties",
      "timestamp": "15:45"
    },
    {
      "start": 947.36,
      "duration": 1.68,
      "text": "of internal functions and things like",
      "timestamp": "15:47"
    },
    {
      "start": 949.04,
      "duration": 3.599,
      "text": "that so I'm almost done I just want to",
      "timestamp": "15:49"
    },
    {
      "start": 952.639,
      "duration": 2.081,
      "text": "before I go to the question I want to",
      "timestamp": "15:52"
    },
    {
      "start": 954.72,
      "duration": 4.0,
      "text": "don't get this talk wrong so this talk",
      "timestamp": "15:54"
    },
    {
      "start": 958.72,
      "duration": 2.88,
      "text": "doesn't prevent we still need auditing",
      "timestamp": "15:58"
    },
    {
      "start": 961.6,
      "duration": 2.08,
      "text": "we still need fuzzing we need everything",
      "timestamp": "16:01"
    },
    {
      "start": 963.68,
      "duration": 1.599,
      "text": "Okay, I'm not going to I don't want to",
      "timestamp": "16:03"
    },
    {
      "start": 965.279,
      "duration": 3.281,
      "text": "confu confuse it. This talk is actually",
      "timestamp": "16:05"
    },
    {
      "start": 968.56,
      "duration": 2.48,
      "text": "giving you an extra security layer. You",
      "timestamp": "16:08"
    },
    {
      "start": 971.04,
      "duration": 3.12,
      "text": "can use our tool to get to use this AI",
      "timestamp": "16:11"
    },
    {
      "start": 974.16,
      "duration": 2.32,
      "text": "based together with our tool or fuzzy",
      "timestamp": "16:14"
    },
    {
      "start": 976.48,
      "duration": 2.159,
      "text": "others. It just get another layer. I'm",
      "timestamp": "16:16"
    },
    {
      "start": 978.639,
      "duration": 2.56,
      "text": "not proposing it instead of everything",
      "timestamp": "16:18"
    },
    {
      "start": 981.199,
      "duration": 1.921,
      "text": "you have.",
      "timestamp": "16:21"
    },
    {
      "start": 983.12,
      "duration": 2.079,
      "text": "And finally, I think it's interesting",
      "timestamp": "16:23"
    },
    {
      "start": 985.199,
      "duration": 3.76,
      "text": "that basically AI allow us to do more",
      "timestamp": "16:25"
    },
    {
      "start": 988.959,
      "duration": 2.88,
      "text": "automation of security.",
      "timestamp": "16:28"
    },
    {
      "start": 991.839,
      "duration": 2.641,
      "text": "So, I'm ready to take questions. Please,",
      "timestamp": "16:31"
    },
    {
      "start": 994.48,
      "duration": 3.38,
      "text": "please ask me some questions. Yes.",
      "timestamp": "16:34"
    },
    {
      "start": 997.86,
      "duration": 6.068,
      "text": "[Applause]",
      "timestamp": "16:37"
    },
    {
      "start": 1004.8,
      "duration": 2.0,
      "text": "Yes. Hello. Thank you, professor, for",
      "timestamp": "16:44"
    },
    {
      "start": 1006.8,
      "duration": 1.76,
      "text": "this interesting talk. I just wanted to",
      "timestamp": "16:46"
    },
    {
      "start": 1008.56,
      "duration": 3.12,
      "text": "ask about the false positives. So, how",
      "timestamp": "16:48"
    },
    {
      "start": 1011.68,
      "duration": 1.519,
      "text": "often does it say that there's an",
      "timestamp": "16:51"
    },
    {
      "start": 1013.199,
      "duration": 2.961,
      "text": "exploit when there actually uh when a",
      "timestamp": "16:53"
    },
    {
      "start": 1016.16,
      "duration": 2.4,
      "text": "human studies it there is no exploit?",
      "timestamp": "16:56"
    },
    {
      "start": 1018.56,
      "duration": 3.6,
      "text": "So, so, so, so notice that in this case",
      "timestamp": "16:58"
    },
    {
      "start": 1022.16,
      "duration": 2.799,
      "text": "and that's something interesting. Uh,",
      "timestamp": "17:02"
    },
    {
      "start": 1024.959,
      "duration": 1.441,
      "text": "somebody could think of formal",
      "timestamp": "17:04"
    },
    {
      "start": 1026.4,
      "duration": 2.88,
      "text": "verification and and and AI as",
      "timestamp": "17:06"
    },
    {
      "start": 1029.28,
      "duration": 1.518,
      "text": "complimentary",
      "timestamp": "17:09"
    },
    {
      "start": 1030.799,
      "duration": 3.681,
      "text": "AI is very very local but it it makes",
      "timestamp": "17:10"
    },
    {
      "start": 1034.48,
      "duration": 1.599,
      "text": "mistake. Formal verification doesn't",
      "timestamp": "17:14"
    },
    {
      "start": 1036.079,
      "duration": 3.041,
      "text": "make mistake. Okay. When we prove the",
      "timestamp": "17:16"
    },
    {
      "start": 1039.12,
      "duration": 3.12,
      "text": "property up to a bug in our tool, it is",
      "timestamp": "17:19"
    },
    {
      "start": 1042.24,
      "duration": 2.798,
      "text": "proved. Okay. And we have when we have a",
      "timestamp": "17:22"
    },
    {
      "start": 1045.039,
      "duration": 2.639,
      "text": "violation of it up to a bug in the rule",
      "timestamp": "17:25"
    },
    {
      "start": 1047.679,
      "duration": 2.161,
      "text": "it is a violation otherwise you will",
      "timestamp": "17:27"
    },
    {
      "start": 1049.84,
      "duration": 2.16,
      "text": "complain a bug in our tool. So we the",
      "timestamp": "17:29"
    },
    {
      "start": 1052.0,
      "duration": 2.24,
      "text": "formal verification has a scaling issue",
      "timestamp": "17:32"
    },
    {
      "start": 1054.24,
      "duration": 1.84,
      "text": "but the formal verification always give",
      "timestamp": "17:34"
    },
    {
      "start": 1056.08,
      "duration": 3.12,
      "text": "you the exact answer. LLM give you a lot",
      "timestamp": "17:36"
    },
    {
      "start": 1059.2,
      "duration": 3.359,
      "text": "of noise but but this noise you can you",
      "timestamp": "17:39"
    },
    {
      "start": 1062.559,
      "duration": 2.321,
      "text": "can you can check. Of course it could be",
      "timestamp": "17:42"
    },
    {
      "start": 1064.88,
      "duration": 1.76,
      "text": "confusing if it give you a bug which is",
      "timestamp": "17:44"
    },
    {
      "start": 1066.64,
      "duration": 2.8,
      "text": "not understandable. But the the false",
      "timestamp": "17:46"
    },
    {
      "start": 1069.44,
      "duration": 3.76,
      "text": "positive are are are being uh sort of",
      "timestamp": "17:49"
    },
    {
      "start": 1073.2,
      "duration": 1.52,
      "text": "handled by the by the formal",
      "timestamp": "17:53"
    },
    {
      "start": 1074.72,
      "duration": 2.56,
      "text": "verification tool.",
      "timestamp": "17:54"
    },
    {
      "start": 1077.28,
      "duration": 3.04,
      "text": "Um very interesting talk. Thank you. Um",
      "timestamp": "17:57"
    },
    {
      "start": 1080.32,
      "duration": 2.479,
      "text": "one of the slides said your AI model",
      "timestamp": "18:00"
    },
    {
      "start": 1082.799,
      "duration": 3.281,
      "text": "already had uh knowledge of DeFi. Can",
      "timestamp": "18:02"
    },
    {
      "start": 1086.08,
      "duration": 2.16,
      "text": "you talk a little bit about whether you",
      "timestamp": "18:06"
    },
    {
      "start": 1088.24,
      "duration": 2.4,
      "text": "found an existing model that had DeFi",
      "timestamp": "18:08"
    },
    {
      "start": 1090.64,
      "duration": 2.08,
      "text": "knowledge or did you train one yourself?",
      "timestamp": "18:10"
    },
    {
      "start": 1092.72,
      "duration": 2.72,
      "text": "And if you did train it, how what what",
      "timestamp": "18:12"
    },
    {
      "start": 1095.44,
      "duration": 2.32,
      "text": "is the data set you use to train? Thank",
      "timestamp": "18:15"
    },
    {
      "start": 1097.76,
      "duration": 2.799,
      "text": "you. Yes, that's a an an excellent",
      "timestamp": "18:17"
    },
    {
      "start": 1100.559,
      "duration": 2.24,
      "text": "question. So the question is how do we",
      "timestamp": "18:20"
    },
    {
      "start": 1102.799,
      "duration": 2.561,
      "text": "get AI models? So it's very clear that",
      "timestamp": "18:22"
    },
    {
      "start": 1105.36,
      "duration": 2.64,
      "text": "in many domain including us there's very",
      "timestamp": "18:25"
    },
    {
      "start": 1108.0,
      "duration": 2.72,
      "text": "small data companies like open AI they",
      "timestamp": "18:28"
    },
    {
      "start": 1110.72,
      "duration": 2.56,
      "text": "do ma a magic job by basically putting a",
      "timestamp": "18:30"
    },
    {
      "start": 1113.28,
      "duration": 2.56,
      "text": "lot of smart engineers to to collect",
      "timestamp": "18:33"
    },
    {
      "start": 1115.84,
      "duration": 2.24,
      "text": "this data. We are at the moment using",
      "timestamp": "18:35"
    },
    {
      "start": 1118.08,
      "duration": 2.8,
      "text": "very very simple data. It's based on all",
      "timestamp": "18:38"
    },
    {
      "start": 1120.88,
      "duration": 2.64,
      "text": "open source and it's based on the",
      "timestamp": "18:40"
    },
    {
      "start": 1123.52,
      "duration": 2.24,
      "text": "repository that we have and of course we",
      "timestamp": "18:43"
    },
    {
      "start": 1125.76,
      "duration": 1.76,
      "text": "have a little bias to use our thing",
      "timestamp": "18:45"
    },
    {
      "start": 1127.52,
      "duration": 2.24,
      "text": "because we understand it more but of",
      "timestamp": "18:47"
    },
    {
      "start": 1129.76,
      "duration": 3.36,
      "text": "course we we we we want to use more and",
      "timestamp": "18:49"
    },
    {
      "start": 1133.12,
      "duration": 2.48,
      "text": "we want to leverage community and at",
      "timestamp": "18:53"
    },
    {
      "start": 1135.6,
      "duration": 2.079,
      "text": "some point if we have enough budget",
      "timestamp": "18:55"
    },
    {
      "start": 1137.679,
      "duration": 2.161,
      "text": "we'll probably put engineers to to",
      "timestamp": "18:57"
    },
    {
      "start": 1139.84,
      "duration": 2.16,
      "text": "collect data and to to gather data",
      "timestamp": "18:59"
    },
    {
      "start": 1142.0,
      "duration": 2.559,
      "text": "ourselves.",
      "timestamp": "19:02"
    },
    {
      "start": 1144.559,
      "duration": 3.201,
      "text": "Thank you. It was a very nice talk. Um,",
      "timestamp": "19:04"
    },
    {
      "start": 1147.76,
      "duration": 1.76,
      "text": "I'm just wondering, I think it's a bit",
      "timestamp": "19:07"
    },
    {
      "start": 1149.52,
      "duration": 1.6,
      "text": "related to the exploit question, but",
      "timestamp": "19:09"
    },
    {
      "start": 1151.12,
      "duration": 2.64,
      "text": "separately. How many of the",
      "timestamp": "19:11"
    },
    {
      "start": 1153.76,
      "duration": 2.56,
      "text": "specifications that were generated by AI",
      "timestamp": "19:13"
    },
    {
      "start": 1156.32,
      "duration": 2.16,
      "text": "were actually correct? Did they actually",
      "timestamp": "19:16"
    },
    {
      "start": 1158.48,
      "duration": 2.079,
      "text": "capture what you were intending from",
      "timestamp": "19:18"
    },
    {
      "start": 1160.559,
      "duration": 1.841,
      "text": "whichever function you were analyzing at",
      "timestamp": "19:20"
    },
    {
      "start": 1162.4,
      "duration": 2.72,
      "text": "time? So, does it does it generate a lot",
      "timestamp": "19:22"
    },
    {
      "start": 1165.12,
      "duration": 2.64,
      "text": "of uh completely garbage even things",
      "timestamp": "19:25"
    },
    {
      "start": 1167.76,
      "duration": 1.84,
      "text": "that are might not be syntactically",
      "timestamp": "19:27"
    },
    {
      "start": 1169.6,
      "duration": 2.079,
      "text": "correct even?",
      "timestamp": "19:29"
    },
    {
      "start": 1171.679,
      "duration": 3.041,
      "text": "So, so for us the one thing that we did",
      "timestamp": "19:31"
    },
    {
      "start": 1174.72,
      "duration": 2.8,
      "text": "for good and for bad we we picked a very",
      "timestamp": "19:34"
    },
    {
      "start": 1177.52,
      "duration": 2.159,
      "text": "very simple language for writing the",
      "timestamp": "19:37"
    },
    {
      "start": 1179.679,
      "duration": 2.481,
      "text": "property. So if you if you generate CVL",
      "timestamp": "19:39"
    },
    {
      "start": 1182.16,
      "duration": 1.68,
      "text": "you're definitely right. CVL is very",
      "timestamp": "19:42"
    },
    {
      "start": 1183.84,
      "duration": 2.079,
      "text": "expressive. It's allowed to write. We",
      "timestamp": "19:43"
    },
    {
      "start": 1185.919,
      "duration": 3.281,
      "text": "decided to to go about the long hanging",
      "timestamp": "19:45"
    },
    {
      "start": 1189.2,
      "duration": 2.16,
      "text": "foot. So by definition the the",
      "timestamp": "19:49"
    },
    {
      "start": 1191.36,
      "duration": 2.559,
      "text": "properties that we infer are small. But",
      "timestamp": "19:51"
    },
    {
      "start": 1193.919,
      "duration": 2.161,
      "text": "I want to be fair with you. We have not",
      "timestamp": "19:53"
    },
    {
      "start": 1196.08,
      "duration": 2.719,
      "text": "done enough experiment to say I imagine",
      "timestamp": "19:56"
    },
    {
      "start": 1198.799,
      "duration": 2.401,
      "text": "you're probably right at some point. It",
      "timestamp": "19:58"
    },
    {
      "start": 1201.2,
      "duration": 2.64,
      "text": "depends also which audit we go and",
      "timestamp": "20:01"
    },
    {
      "start": 1203.84,
      "duration": 1.839,
      "text": "depends on which thing we go. I'm sure",
      "timestamp": "20:03"
    },
    {
      "start": 1205.679,
      "duration": 2.0,
      "text": "there will be some noise. I totally",
      "timestamp": "20:05"
    },
    {
      "start": 1207.679,
      "duration": 4.36,
      "text": "agree and we have to see.",
      "timestamp": "20:07"
    },
    {
      "start": 1212.4,
      "duration": 3.04,
      "text": "Okay. Thank you.",
      "timestamp": "20:12"
    },
    {
      "start": 1215.44,
      "duration": 1.76,
      "text": "Thanks everybody. Thank you for the",
      "timestamp": "20:15"
    },
    {
      "start": 1217.2,
      "duration": 2.32,
      "text": "talk. We will have this work very soon",
      "timestamp": "20:17"
    },
    {
      "start": 1219.52,
      "duration": 4.2,
      "text": "available. Thank you very much.",
      "timestamp": "20:19"
    }
  ],
  "extraction_timestamp": "2025-07-08T14:45:53.127791",
  "playlist_title": "EthCC[8] Redford Stage"
}
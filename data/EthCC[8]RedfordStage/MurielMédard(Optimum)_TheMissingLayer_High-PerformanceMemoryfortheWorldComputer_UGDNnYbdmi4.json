{
  "video_id": "UGDNnYbdmi4",
  "video_title": "Muriel Médard (Optimum)_The Missing Layer: High-Performance Memory for the World Computer",
  "video_url": "https://www.youtube.com/watch?v=UGDNnYbdmi4",
  "channel_title": "[EthCC] Livestream 4",
  "published_at": "2025-06-30T23:47:59+00:00",
  "duration_seconds": null,
  "view_count": 132,
  "like_count": 5,
  "description": "Incubated at MIT and backed by 20 years of research, Muriel Médard presents Optimum—the first high-performance memory layer for the world computer. Leveraging RLNC, it transforms web3 data infrastructure with a complete memory bus and deRAM solution.",
  "transcript": {
    "language": "en",
    "is_auto_generated": false,
    "total_segments": 460,
    "aggregated_text": "[Music] okay all righty okay great um hi everyone uh it's it's a pleasure to be here i'm going to talk to you about Optimum and the high performance memory for the world computer uh so um I'm Muriel Mad Muriel Mid uh and uh I'm on leave from MIT to pursue this full-time uh this has been a very very long time in the making in the lab uh and finally ready to come out so it's been extremely exciting uh to jump from uh from academia uh with my co-founders and one of them is here to to take this this big step to make this uh technology uh a reality um I've been uh at MIT for pretty much my my entire career before that uh heading the network coding and reliable communications group uh and I'm uh I hold the chair the NC chair in software science and engineering for the entire school of engineering okay um we have amazing backers um we've been really really fortunate uh to get a group of people who didn't just support us financially um but are involved knowledgeable and supportive uh that's really what we were looking for and that's what we had so um our uh first uh our seed round was uh led by 1K ax uh and uh as you can see we have really just an amazing amazing set of backers um so first of all what is memory i really liked uh the previous uh the previous presentation because you know I was making mental notes about the fact that uh they were doing a really good job sort of setting the stage for a bus and a ROM and a RAM uh and uh basically that's that's really what uh what memory is so um when you think of data propagation particularly gossip particularly in the case uh of Ethereum uh that's kind of like the ephemeral memory that's uh really just like a bus in a computer and we'll see that later uh you also have the readonly memory uh so if you think of any sort of ledger uh you write to it but then you you don't erase you don't update you only read from it after you write uh so that's basically what we're going to call our optimum DROM and then you have state and state is memory that you can access and change and of course there you have to be very very careful uh about things like atomicity uh and consistency and durability sort of the acid framework uh that a computer which is centralized would uh be able to provide to you so these are the three aspects the three axes uh of our memory uh and this is basically what uh what we're building and uh to go a little bit more into detail um how does this connect to the world computer how does this connect to the title of the presentation um so I'm going to start maybe from the middle rather than from the left you know what is a computer right if you're going to build a world computer it's a very reasonable question to say well Okay great what are you building what is a computer and we have this fantastic um uh sort of model this abstraction that has really stood the test of time the what's called the the Venoyman or or the or the Princeton abstraction and what it said is um you know a computer takes an input an output of course you know so you you ask it to do something and it gives it back to you and in the main in the in the middle you have sort of two big things one is a compute you know with the arithmetic logic unit again we saw that in the previous presentation and the other one is a memory unit with in between the communication the bus okay so you need not just to compute but you need to have memory to store what you the results of your computation also to be able to read local inputs uh for your computation and you can actually map now going to the left hand side that very cleanly uh to what's going on in the layers uh in the layers um of of web 3 and you know you you can discuss a little bit exactly you know maybe some people have some other layers or not but you know by and large everybody agrees that at least these layers are there uh and what you can see at the top in green is kind of really com you know corresponding to the computation and then the bottom in purple uh networking layer state data and transaction data really going more to the memory unit um so let's go back to the top layer which would be say your EVM uh I think in there you can really recognize um something which would look familiar if you ever took a course say in systems uh you know in your undergraduate or or operate you know in any sort of computer systems you know the top is decentralized in web 3 it's a little different but you know it looks very very recognizable the bottom part right now does not look so recognizable right so you have very ad hoc solutions for read rights uh the bus instead of being you know a serial or uh you know very um carefully managed bus is is is gossip which is very different um you know the memory the ROM looks like archival nodes um and then you know you have this extra aspect of DA for the archival nodes which generally is very much hidden inside of your computer right there is an access that you do check whether the the data is uh is available and and indeed uh you know hasn't been corrupted but you do that sort of behind the scenes you don't you don't usually um sort of expose that feature um so okay you can say \"All right so maybe I don't recognize the bottom part the the purple part but why do I care right i mean if it works uh why do I care whether I recognize it or not?\" Well who who cares uh and we care and because that's really the the fact that the bottom part is so ad hoc is really why you have this low bandwidth these low transactions these massive storage costs and also scaling challenges right and scaling challenges we'll see that later um mean that you know things basically get slow things get expensive um as you get more and more nodes or alternatively as you're just using the network more and more so when you're trying to get more throughput say bigger blobs or anything like that okay so what are the optimum products you know what what what do we do so our first one and we'll talk about that a little bit more in detail is the optimum P2P corresponding effectively to what I mentioned before which is uh which is the bus and what we do is we increase bandwidth we reduce latency how do we do that how much do we do that I'll show you I'll show you that uh in a second um and basically we can take variety of of data types uh but we really change drastically the latency and the throughput in that domain our next two products uh which we've already done a lot of the work on uh but uh but haven't put on on test net yet are the DROM so the the read only memory you know the the the ledger side uh where you need to have durable and efficient data storage and then the DRAM where you also need the extra twist of consistency right so so that everything looks to you as though it was done in a central control RAM on a single computer even though it's actually completely decentralized um and that's basically keeping uh the state machine versus keeping the ledger where you're just adding but you're not changing things that you've already written okay so I told you that we do better uh and you know we we now have to show you now I have to show you that indeed we do better and here's some of the performance benchmarks this is from our private test net uh I'll tell you later who some of our part who our partners are in that private test net but I'd like to spend a little bit more time on this uh on this slide okay so what do we have down here uh on the obsa is the message size and what I have on the left hand side is the average latency in milliseconds and on the right hand side is the standard deviation okay so basically this is the mean this is the first moment and that's the standard deviation that's a square root of the second moment all right so you want of course the mean to be as low as possible but you also want the standard deviation to be as low as possible why well first of all you'd like things to be not uncertain and actually you know for all of you out there who who maybe have studied EQing you know there was there was actually a really interesting conversation recently uh on X uh about you know how uh you know how how going to to um uh smaller message sizes was was helping and I I I jumped in and I said well you know it's it's because something called uh the polychin equation and the polychin equation tells you that actually having this variance the second moment be large hurts you not just you know in sort of uh a user experience but actually also contributes to higher delays the variance actually at a system level um contributes to to higher delays so we want the first one to be low but we also want at a system level the second one to be to be as low as possible and what you can see is that we get a benefit um this is comparing gossip sum so effectively what is currently in ethereum with optimum P2P and you can see at 2 megabytes 4 megabytes 6 megabyte 8 megabyte so you see a steady improvement but also an improvement that's highly nonlinear again why is it highly nonlinear uh for all of you who took queuing at some stage and for all of you who didn't take queuing it's because you have a very very nonlinear relation between delay and utilization so as you're trying to put in more throughput your utilization goes up and as utilization goes up your delay your latency goes up in a completely nonlinear way for that this is something that we experience all the time particularly if you live in a place which maybe has some congestion on the roads you know you're on the road everything looks great you know it's it's uh okay it's just it's just going really well and then you know you have a very short period of time when it looks like it's a little congested but you're still going uh going uh you know as fast as you want and then bam you got a traffic jam okay and it's because there's actually a very short interval between being really low utilization and not congested and low delay and having high utilization being congested and having delay so basically because we are able to accommodate a higher throughput it's as though I was adding more lanes in your highway okay because you know that if you had more lanes in your highway you wouldn't get that uh traffic jam as quickly right it would take a lot lot longer to get a traffic jam and therefore you wouldn't have that delay that's exactly what's happening there so you can see that very very nonlinear uh behavior and that's extremely important for us uh and especially when you look at Ethereum it's extremely important as we're looking to have our message sizes get bigger and bigger for a variety uh for a variety of reasons okay I just want to touch very briefly on how we do it right i think the important thing is more what it does but it's uh it's fun and I think it's important to just touch briefly on how we do it so the way we do it is we use uh we use coding uh where coding is making algebraic combinations and how we make these algebraic combinations is we make them using galwa fields so Evaristo Galwa you know local local person well actually no he was from Bular up up near uh Paris but um you know basically came up with this notion which is kind of like a generalization of George Bull's binary just two he he basically thought of going beyond two um and what we do is we take representations in these uh algebraic finite fields um and we mix them in a completely decentralized way which is why I talk here about a decentralized code this is very different from codes you may have heard of for instance um in traditional uh DA where you use something called read Solomon codes um or you may have seen things like um uh like repto codes um and things like monot and so on those are end to end centralized codes this is a completely decentralized code and in particular you have this unique ability to take coded pieces and create a new coded piece without ever decoding and this is providing that completely decentralized propagation and will later be the basis for decentralized memory both ROM and RAM by having this RLNC only composability that's what we're implementing and the reason we're called optimum is because that is actually optimum uh if any of you are going to be tomorrow at the P2P event I'll I'll nerd out a little bit more and show you the math of why why it's actually optimum so if you're interested happy to talk afterwards or happy to to catch up with you tomorrow uh but basically you cannot do better interestingly enough you know there's always a lot of discussion around well you know uh should are you better off being centralized and you want to be decentralized but you're actually just um you know having to sacrifice something if you gave me a centralized scheduler that knew everything that was going on in the network and could actually distribute just so versus this completely decentralized stateless system where we don't actually even care at any node what other nodes are doing you can prove it's the same you would not do better if you had a controller and that's not often the case right so how often can you show that if somebody gave you an omnisient you know completely competent scheduler and instead you had this approach where you have absolutely no idea what the other nodes are doing and you actually don't care that the two will do the same that's basically what we can show and that's really what you're seeing that's why you're seeing this great gains we are getting the best performance possible provably from the resources that are available and that's what optimum does and this is basically what I've been working on in my lab now for about two decades so you know it takes a long time to go from from the math uh to the uh to the actual uh implementation uh and this is this is really what what you're seeing okay so who's going to benefit from this well you know everybody L1's and L2s validators DAPs end users things going faster higher throughput and basically cheaper you know everybody everybody gets a gain from this so I mentioned to you our test net I showed you some results on test net we just announced very recently who our partners are so we are extremely ly fortunate to be working with a fantastic set uh of of partners uh some of them actually are uh are here um at ETHCC and uh looking forward to to catching up with them um and and they've been they've been really fantastic and and it's it's really them and you know I encourage you again to to take a look um if you want on AXA what we've uh what uh we've been doing it's really them who have been you know the the verification uh that what we're doing is really inherently inherently useful so with that um check us out we'd love to chat um we as I said right now we are on private testnet um you know we'll be looking at going uh on a public um next uh to to Hoodie and then and then to to having we hope a a public test net and um really looking to for forward to any questions that you may have with that i think we have a couple minutes great are there any questions uh one and two and three yes thank you i was wondering with RLNC like how many times are you able to encode and thank you um I was wondering with RLNC how many times are you able to encode and if you do that a number of times then does the latency also decrease and with what function thank you yeah very good question so um because it is unstructured uh you can actually in keep a re-encoding indefinitely so you basically modify um a header with the uh with the coefficients and the mo the coefficients just gets updated so you cannot look at a network coded packet and even know how many times it's been re-encoded uh it you're not appending new coefficients you're modifying the existing coefficients so you can keep doing it for as long as you want and it's very fast so it doesn't add to the latency very good question thank you so much two yeah um I'm wondering um Ethereum pretty much have like block sizes of 150 kilobytes like how well does it compare this new method to with existing like smaller messages yeah that's a good question uh so we did with the smaller messages we started with that we were getting about a 2x benefit um the really nonlinear benefit which I was showing you know gets as the number of messages goes as the size of the message goes up or alternatively if you have small messages but a lot of demand okay so uh here I only showed in terms of the size of the messages because it's a little easier to to just uh control one item at a time but even if you have small messages but you have um but you have a high uh high utilization high demand then you still see that that nonlinear behavior so even with small messages and high demand you will see that uh that nonlinear behavior is this lito based so it's a modification of it uh to add to the coding that's correct that's correct yeah very much so i think there was another question unfortunately out of time I'll talk to you later okay thank you all thank you thanks",
    "text_length": 16973,
    "word_count": 3283
  },
  "segments": [
    {
      "start": 1.42,
      "duration": 3.19,
      "text": "[Music]",
      "timestamp": "00:01"
    },
    {
      "start": 5.839,
      "duration": 1.601,
      "text": "okay",
      "timestamp": "00:05"
    },
    {
      "start": 7.44,
      "duration": 4.239,
      "text": "all righty okay great um hi everyone uh",
      "timestamp": "00:07"
    },
    {
      "start": 11.679,
      "duration": 1.84,
      "text": "it's it's a pleasure to be here i'm",
      "timestamp": "00:11"
    },
    {
      "start": 13.519,
      "duration": 2.561,
      "text": "going to talk to you about Optimum and",
      "timestamp": "00:13"
    },
    {
      "start": 16.08,
      "duration": 1.84,
      "text": "the high performance memory for the",
      "timestamp": "00:16"
    },
    {
      "start": 17.92,
      "duration": 5.119,
      "text": "world computer uh so um I'm Muriel Mad",
      "timestamp": "00:17"
    },
    {
      "start": 23.039,
      "duration": 3.361,
      "text": "Muriel Mid uh and uh I'm on leave from",
      "timestamp": "00:23"
    },
    {
      "start": 26.4,
      "duration": 2.56,
      "text": "MIT to pursue this full-time uh this has",
      "timestamp": "00:26"
    },
    {
      "start": 28.96,
      "duration": 2.079,
      "text": "been a very very long time in the making",
      "timestamp": "00:28"
    },
    {
      "start": 31.039,
      "duration": 2.401,
      "text": "in the lab uh and finally ready to come",
      "timestamp": "00:31"
    },
    {
      "start": 33.44,
      "duration": 2.4,
      "text": "out so it's been extremely exciting uh",
      "timestamp": "00:33"
    },
    {
      "start": 35.84,
      "duration": 2.879,
      "text": "to jump from uh from academia uh with my",
      "timestamp": "00:35"
    },
    {
      "start": 38.719,
      "duration": 2.641,
      "text": "co-founders and one of them is here to",
      "timestamp": "00:38"
    },
    {
      "start": 41.36,
      "duration": 2.8,
      "text": "to take this this big step to make this",
      "timestamp": "00:41"
    },
    {
      "start": 44.16,
      "duration": 3.84,
      "text": "uh technology uh a reality um I've been",
      "timestamp": "00:44"
    },
    {
      "start": 48.0,
      "duration": 2.879,
      "text": "uh at MIT for pretty much my my entire",
      "timestamp": "00:48"
    },
    {
      "start": 50.879,
      "duration": 1.921,
      "text": "career before that uh heading the",
      "timestamp": "00:50"
    },
    {
      "start": 52.8,
      "duration": 1.279,
      "text": "network coding and reliable",
      "timestamp": "00:52"
    },
    {
      "start": 54.079,
      "duration": 2.96,
      "text": "communications group uh and I'm uh I",
      "timestamp": "00:54"
    },
    {
      "start": 57.039,
      "duration": 2.0,
      "text": "hold the chair the NC chair in software",
      "timestamp": "00:57"
    },
    {
      "start": 59.039,
      "duration": 1.84,
      "text": "science and engineering for the entire",
      "timestamp": "00:59"
    },
    {
      "start": 60.879,
      "duration": 3.599,
      "text": "school of engineering okay um we have",
      "timestamp": "01:00"
    },
    {
      "start": 64.479,
      "duration": 2.721,
      "text": "amazing backers um we've been really",
      "timestamp": "01:04"
    },
    {
      "start": 67.2,
      "duration": 3.52,
      "text": "really fortunate uh to get a group of",
      "timestamp": "01:07"
    },
    {
      "start": 70.72,
      "duration": 2.0,
      "text": "people who didn't just support us",
      "timestamp": "01:10"
    },
    {
      "start": 72.72,
      "duration": 2.96,
      "text": "financially um but are involved",
      "timestamp": "01:12"
    },
    {
      "start": 75.68,
      "duration": 2.56,
      "text": "knowledgeable and supportive uh that's",
      "timestamp": "01:15"
    },
    {
      "start": 78.24,
      "duration": 1.28,
      "text": "really what we were looking for and",
      "timestamp": "01:18"
    },
    {
      "start": 79.52,
      "duration": 4.959,
      "text": "that's what we had so um our uh first uh",
      "timestamp": "01:19"
    },
    {
      "start": 84.479,
      "duration": 3.68,
      "text": "our seed round was uh led by 1K ax uh",
      "timestamp": "01:24"
    },
    {
      "start": 88.159,
      "duration": 2.161,
      "text": "and uh as you can see we have really",
      "timestamp": "01:28"
    },
    {
      "start": 90.32,
      "duration": 2.96,
      "text": "just an amazing amazing set of backers",
      "timestamp": "01:30"
    },
    {
      "start": 93.28,
      "duration": 3.36,
      "text": "um so first of all what is memory i",
      "timestamp": "01:33"
    },
    {
      "start": 96.64,
      "duration": 2.08,
      "text": "really liked uh the previous uh the",
      "timestamp": "01:36"
    },
    {
      "start": 98.72,
      "duration": 1.759,
      "text": "previous presentation because you know I",
      "timestamp": "01:38"
    },
    {
      "start": 100.479,
      "duration": 2.081,
      "text": "was making mental notes about the fact",
      "timestamp": "01:40"
    },
    {
      "start": 102.56,
      "duration": 1.519,
      "text": "that uh they were doing a really good",
      "timestamp": "01:42"
    },
    {
      "start": 104.079,
      "duration": 2.801,
      "text": "job sort of setting the stage for a bus",
      "timestamp": "01:44"
    },
    {
      "start": 106.88,
      "duration": 4.08,
      "text": "and a ROM and a RAM uh and uh basically",
      "timestamp": "01:46"
    },
    {
      "start": 110.96,
      "duration": 2.32,
      "text": "that's that's really what uh what memory",
      "timestamp": "01:50"
    },
    {
      "start": 113.28,
      "duration": 2.879,
      "text": "is so um when you think of data",
      "timestamp": "01:53"
    },
    {
      "start": 116.159,
      "duration": 2.0,
      "text": "propagation particularly gossip",
      "timestamp": "01:56"
    },
    {
      "start": 118.159,
      "duration": 2.721,
      "text": "particularly in the case uh of Ethereum",
      "timestamp": "01:58"
    },
    {
      "start": 120.88,
      "duration": 2.239,
      "text": "uh that's kind of like the ephemeral",
      "timestamp": "02:00"
    },
    {
      "start": 123.119,
      "duration": 2.96,
      "text": "memory that's uh really just like a bus",
      "timestamp": "02:03"
    },
    {
      "start": 126.079,
      "duration": 2.641,
      "text": "in a computer and we'll see that later",
      "timestamp": "02:06"
    },
    {
      "start": 128.72,
      "duration": 2.64,
      "text": "uh you also have the readonly memory uh",
      "timestamp": "02:08"
    },
    {
      "start": 131.36,
      "duration": 2.8,
      "text": "so if you think of any sort of ledger uh",
      "timestamp": "02:11"
    },
    {
      "start": 134.16,
      "duration": 2.159,
      "text": "you write to it but then you you don't",
      "timestamp": "02:14"
    },
    {
      "start": 136.319,
      "duration": 2.161,
      "text": "erase you don't update you only read",
      "timestamp": "02:16"
    },
    {
      "start": 138.48,
      "duration": 2.88,
      "text": "from it after you write uh so that's",
      "timestamp": "02:18"
    },
    {
      "start": 141.36,
      "duration": 1.68,
      "text": "basically what we're going to call our",
      "timestamp": "02:21"
    },
    {
      "start": 143.04,
      "duration": 2.16,
      "text": "optimum DROM",
      "timestamp": "02:23"
    },
    {
      "start": 145.2,
      "duration": 2.96,
      "text": "and then you have state and state is",
      "timestamp": "02:25"
    },
    {
      "start": 148.16,
      "duration": 2.64,
      "text": "memory that you can access and change",
      "timestamp": "02:28"
    },
    {
      "start": 150.8,
      "duration": 2.079,
      "text": "and of course there you have to be very",
      "timestamp": "02:30"
    },
    {
      "start": 152.879,
      "duration": 2.801,
      "text": "very careful uh about things like",
      "timestamp": "02:32"
    },
    {
      "start": 155.68,
      "duration": 1.6,
      "text": "atomicity",
      "timestamp": "02:35"
    },
    {
      "start": 157.28,
      "duration": 2.239,
      "text": "uh and consistency and durability sort",
      "timestamp": "02:37"
    },
    {
      "start": 159.519,
      "duration": 3.601,
      "text": "of the acid framework uh that a computer",
      "timestamp": "02:39"
    },
    {
      "start": 163.12,
      "duration": 2.399,
      "text": "which is centralized would uh be able to",
      "timestamp": "02:43"
    },
    {
      "start": 165.519,
      "duration": 2.881,
      "text": "provide to you so these are the three",
      "timestamp": "02:45"
    },
    {
      "start": 168.4,
      "duration": 3.6,
      "text": "aspects the three axes uh of our memory",
      "timestamp": "02:48"
    },
    {
      "start": 172.0,
      "duration": 2.239,
      "text": "uh and this is basically what uh what",
      "timestamp": "02:52"
    },
    {
      "start": 174.239,
      "duration": 3.36,
      "text": "we're building and uh to go a little bit",
      "timestamp": "02:54"
    },
    {
      "start": 177.599,
      "duration": 2.481,
      "text": "more into detail um how does this",
      "timestamp": "02:57"
    },
    {
      "start": 180.08,
      "duration": 2.079,
      "text": "connect to the world computer how does",
      "timestamp": "03:00"
    },
    {
      "start": 182.159,
      "duration": 1.761,
      "text": "this connect to the title of the",
      "timestamp": "03:02"
    },
    {
      "start": 183.92,
      "duration": 1.599,
      "text": "presentation",
      "timestamp": "03:03"
    },
    {
      "start": 185.519,
      "duration": 2.72,
      "text": "um so I'm going to start maybe from the",
      "timestamp": "03:05"
    },
    {
      "start": 188.239,
      "duration": 2.161,
      "text": "middle rather than from the left you",
      "timestamp": "03:08"
    },
    {
      "start": 190.4,
      "duration": 2.4,
      "text": "know what is a computer right if you're",
      "timestamp": "03:10"
    },
    {
      "start": 192.8,
      "duration": 1.84,
      "text": "going to build a world computer it's a",
      "timestamp": "03:12"
    },
    {
      "start": 194.64,
      "duration": 1.679,
      "text": "very reasonable question to say well",
      "timestamp": "03:14"
    },
    {
      "start": 196.319,
      "duration": 2.0,
      "text": "Okay great what are you building what is",
      "timestamp": "03:16"
    },
    {
      "start": 198.319,
      "duration": 4.241,
      "text": "a computer and we have this fantastic um",
      "timestamp": "03:18"
    },
    {
      "start": 202.56,
      "duration": 2.72,
      "text": "uh sort of model this abstraction that",
      "timestamp": "03:22"
    },
    {
      "start": 205.28,
      "duration": 2.4,
      "text": "has really stood the test of time the",
      "timestamp": "03:25"
    },
    {
      "start": 207.68,
      "duration": 1.919,
      "text": "what's called the the Venoyman or or the",
      "timestamp": "03:27"
    },
    {
      "start": 209.599,
      "duration": 2.64,
      "text": "or the Princeton abstraction and what it",
      "timestamp": "03:29"
    },
    {
      "start": 212.239,
      "duration": 2.881,
      "text": "said is um you know a computer takes an",
      "timestamp": "03:32"
    },
    {
      "start": 215.12,
      "duration": 2.399,
      "text": "input an output of course you know so",
      "timestamp": "03:35"
    },
    {
      "start": 217.519,
      "duration": 1.36,
      "text": "you you ask it to do something and it",
      "timestamp": "03:37"
    },
    {
      "start": 218.879,
      "duration": 2.401,
      "text": "gives it back to you and in the main in",
      "timestamp": "03:38"
    },
    {
      "start": 221.28,
      "duration": 2.16,
      "text": "the in the middle you have sort of two",
      "timestamp": "03:41"
    },
    {
      "start": 223.44,
      "duration": 3.519,
      "text": "big things one is a compute you know",
      "timestamp": "03:43"
    },
    {
      "start": 226.959,
      "duration": 2.401,
      "text": "with the arithmetic logic unit again we",
      "timestamp": "03:46"
    },
    {
      "start": 229.36,
      "duration": 2.0,
      "text": "saw that in the previous presentation",
      "timestamp": "03:49"
    },
    {
      "start": 231.36,
      "duration": 2.08,
      "text": "and the other one is a memory unit with",
      "timestamp": "03:51"
    },
    {
      "start": 233.44,
      "duration": 2.4,
      "text": "in between the communication the bus",
      "timestamp": "03:53"
    },
    {
      "start": 235.84,
      "duration": 2.64,
      "text": "okay so you need not just to compute but",
      "timestamp": "03:55"
    },
    {
      "start": 238.48,
      "duration": 2.72,
      "text": "you need to have memory to store what",
      "timestamp": "03:58"
    },
    {
      "start": 241.2,
      "duration": 2.319,
      "text": "you the results of your computation also",
      "timestamp": "04:01"
    },
    {
      "start": 243.519,
      "duration": 3.041,
      "text": "to be able to read local inputs uh for",
      "timestamp": "04:03"
    },
    {
      "start": 246.56,
      "duration": 2.0,
      "text": "your computation and you can actually",
      "timestamp": "04:06"
    },
    {
      "start": 248.56,
      "duration": 2.16,
      "text": "map now going to the left hand side that",
      "timestamp": "04:08"
    },
    {
      "start": 250.72,
      "duration": 3.68,
      "text": "very cleanly uh to what's going on in",
      "timestamp": "04:10"
    },
    {
      "start": 254.4,
      "duration": 4.559,
      "text": "the layers uh in the layers um of of web",
      "timestamp": "04:14"
    },
    {
      "start": 258.959,
      "duration": 2.0,
      "text": "3 and you know you you can discuss a",
      "timestamp": "04:18"
    },
    {
      "start": 260.959,
      "duration": 1.841,
      "text": "little bit exactly you know maybe some",
      "timestamp": "04:20"
    },
    {
      "start": 262.8,
      "duration": 2.08,
      "text": "people have some other layers or not but",
      "timestamp": "04:22"
    },
    {
      "start": 264.88,
      "duration": 1.92,
      "text": "you know by and large everybody agrees",
      "timestamp": "04:24"
    },
    {
      "start": 266.8,
      "duration": 2.48,
      "text": "that at least these layers are there uh",
      "timestamp": "04:26"
    },
    {
      "start": 269.28,
      "duration": 2.08,
      "text": "and what you can see at the top in green",
      "timestamp": "04:29"
    },
    {
      "start": 271.36,
      "duration": 1.92,
      "text": "is kind of really com you know",
      "timestamp": "04:31"
    },
    {
      "start": 273.28,
      "duration": 2.16,
      "text": "corresponding to the computation and",
      "timestamp": "04:33"
    },
    {
      "start": 275.44,
      "duration": 3.039,
      "text": "then the bottom in purple uh networking",
      "timestamp": "04:35"
    },
    {
      "start": 278.479,
      "duration": 2.241,
      "text": "layer state data and transaction data",
      "timestamp": "04:38"
    },
    {
      "start": 280.72,
      "duration": 4.0,
      "text": "really going more to the memory unit um",
      "timestamp": "04:40"
    },
    {
      "start": 284.72,
      "duration": 2.56,
      "text": "so let's go back to the top layer which",
      "timestamp": "04:44"
    },
    {
      "start": 287.28,
      "duration": 3.6,
      "text": "would be say your EVM uh I think in",
      "timestamp": "04:47"
    },
    {
      "start": 290.88,
      "duration": 3.28,
      "text": "there you can really recognize",
      "timestamp": "04:50"
    },
    {
      "start": 294.16,
      "duration": 3.2,
      "text": "um something which would look familiar",
      "timestamp": "04:54"
    },
    {
      "start": 297.36,
      "duration": 3.839,
      "text": "if you ever took a course say in systems",
      "timestamp": "04:57"
    },
    {
      "start": 301.199,
      "duration": 2.641,
      "text": "uh you know in your undergraduate or or",
      "timestamp": "05:01"
    },
    {
      "start": 303.84,
      "duration": 2.24,
      "text": "operate you know in any sort of computer",
      "timestamp": "05:03"
    },
    {
      "start": 306.08,
      "duration": 1.92,
      "text": "systems you know the top is",
      "timestamp": "05:06"
    },
    {
      "start": 308.0,
      "duration": 1.919,
      "text": "decentralized in web 3 it's a little",
      "timestamp": "05:08"
    },
    {
      "start": 309.919,
      "duration": 1.84,
      "text": "different but you know it looks very",
      "timestamp": "05:09"
    },
    {
      "start": 311.759,
      "duration": 2.481,
      "text": "very recognizable",
      "timestamp": "05:11"
    },
    {
      "start": 314.24,
      "duration": 2.48,
      "text": "the bottom part right now does not look",
      "timestamp": "05:14"
    },
    {
      "start": 316.72,
      "duration": 2.24,
      "text": "so recognizable right so you have very",
      "timestamp": "05:16"
    },
    {
      "start": 318.96,
      "duration": 3.12,
      "text": "ad hoc solutions for read rights uh the",
      "timestamp": "05:18"
    },
    {
      "start": 322.08,
      "duration": 2.48,
      "text": "bus instead of being you know a serial",
      "timestamp": "05:22"
    },
    {
      "start": 324.56,
      "duration": 3.199,
      "text": "or uh you know very um carefully managed",
      "timestamp": "05:24"
    },
    {
      "start": 327.759,
      "duration": 2.72,
      "text": "bus is is is gossip which is very",
      "timestamp": "05:27"
    },
    {
      "start": 330.479,
      "duration": 4.081,
      "text": "different um you know the memory the ROM",
      "timestamp": "05:30"
    },
    {
      "start": 334.56,
      "duration": 3.76,
      "text": "looks like archival nodes um and then",
      "timestamp": "05:34"
    },
    {
      "start": 338.32,
      "duration": 2.08,
      "text": "you know you have this extra aspect of",
      "timestamp": "05:38"
    },
    {
      "start": 340.4,
      "duration": 2.239,
      "text": "DA for the archival nodes which",
      "timestamp": "05:40"
    },
    {
      "start": 342.639,
      "duration": 2.721,
      "text": "generally is very much hidden inside of",
      "timestamp": "05:42"
    },
    {
      "start": 345.36,
      "duration": 2.08,
      "text": "your computer right there is an access",
      "timestamp": "05:45"
    },
    {
      "start": 347.44,
      "duration": 2.16,
      "text": "that you do check whether the the data",
      "timestamp": "05:47"
    },
    {
      "start": 349.6,
      "duration": 3.28,
      "text": "is uh is available and and indeed uh you",
      "timestamp": "05:49"
    },
    {
      "start": 352.88,
      "duration": 1.68,
      "text": "know hasn't been corrupted but you do",
      "timestamp": "05:52"
    },
    {
      "start": 354.56,
      "duration": 1.919,
      "text": "that sort of behind the scenes you don't",
      "timestamp": "05:54"
    },
    {
      "start": 356.479,
      "duration": 3.761,
      "text": "you don't usually um sort of expose that",
      "timestamp": "05:56"
    },
    {
      "start": 360.24,
      "duration": 2.88,
      "text": "feature um so okay you can say \"All",
      "timestamp": "06:00"
    },
    {
      "start": 363.12,
      "duration": 1.919,
      "text": "right so maybe I don't recognize the",
      "timestamp": "06:03"
    },
    {
      "start": 365.039,
      "duration": 2.16,
      "text": "bottom part the the purple part but why",
      "timestamp": "06:05"
    },
    {
      "start": 367.199,
      "duration": 2.641,
      "text": "do I care right i mean if it works uh",
      "timestamp": "06:07"
    },
    {
      "start": 369.84,
      "duration": 1.919,
      "text": "why do I care whether I recognize it or",
      "timestamp": "06:09"
    },
    {
      "start": 371.759,
      "duration": 2.88,
      "text": "not?\" Well who who cares uh and we care",
      "timestamp": "06:11"
    },
    {
      "start": 374.639,
      "duration": 1.921,
      "text": "and because that's really the the fact",
      "timestamp": "06:14"
    },
    {
      "start": 376.56,
      "duration": 2.72,
      "text": "that the bottom part is so ad hoc is",
      "timestamp": "06:16"
    },
    {
      "start": 379.28,
      "duration": 2.0,
      "text": "really why you have this low bandwidth",
      "timestamp": "06:19"
    },
    {
      "start": 381.28,
      "duration": 2.96,
      "text": "these low transactions these massive",
      "timestamp": "06:21"
    },
    {
      "start": 384.24,
      "duration": 2.56,
      "text": "storage costs and also scaling",
      "timestamp": "06:24"
    },
    {
      "start": 386.8,
      "duration": 2.08,
      "text": "challenges right and scaling challenges",
      "timestamp": "06:26"
    },
    {
      "start": 388.88,
      "duration": 3.439,
      "text": "we'll see that later um mean that you",
      "timestamp": "06:28"
    },
    {
      "start": 392.319,
      "duration": 2.561,
      "text": "know things basically get slow things",
      "timestamp": "06:32"
    },
    {
      "start": 394.88,
      "duration": 2.8,
      "text": "get expensive um as you get more and",
      "timestamp": "06:34"
    },
    {
      "start": 397.68,
      "duration": 3.2,
      "text": "more nodes or alternatively as you're",
      "timestamp": "06:37"
    },
    {
      "start": 400.88,
      "duration": 1.68,
      "text": "just using the network more and more so",
      "timestamp": "06:40"
    },
    {
      "start": 402.56,
      "duration": 0.88,
      "text": "when you're trying to get more",
      "timestamp": "06:42"
    },
    {
      "start": 403.44,
      "duration": 2.08,
      "text": "throughput say bigger blobs or anything",
      "timestamp": "06:43"
    },
    {
      "start": 405.52,
      "duration": 3.92,
      "text": "like that okay so what are the optimum",
      "timestamp": "06:45"
    },
    {
      "start": 409.44,
      "duration": 1.599,
      "text": "products you know what what what do we",
      "timestamp": "06:49"
    },
    {
      "start": 411.039,
      "duration": 2.401,
      "text": "do so our first one and we'll talk about",
      "timestamp": "06:51"
    },
    {
      "start": 413.44,
      "duration": 2.08,
      "text": "that a little bit more in detail is the",
      "timestamp": "06:53"
    },
    {
      "start": 415.52,
      "duration": 2.88,
      "text": "optimum P2P corresponding effectively to",
      "timestamp": "06:55"
    },
    {
      "start": 418.4,
      "duration": 3.04,
      "text": "what I mentioned before which is uh",
      "timestamp": "06:58"
    },
    {
      "start": 421.44,
      "duration": 2.72,
      "text": "which is the bus and what we do is we",
      "timestamp": "07:01"
    },
    {
      "start": 424.16,
      "duration": 3.039,
      "text": "increase bandwidth we reduce latency how",
      "timestamp": "07:04"
    },
    {
      "start": 427.199,
      "duration": 2.081,
      "text": "do we do that how much do we do that",
      "timestamp": "07:07"
    },
    {
      "start": 429.28,
      "duration": 2.56,
      "text": "I'll show you I'll show you that uh in a",
      "timestamp": "07:09"
    },
    {
      "start": 431.84,
      "duration": 3.68,
      "text": "second um and basically we can take",
      "timestamp": "07:11"
    },
    {
      "start": 435.52,
      "duration": 3.04,
      "text": "variety of of data types uh but we",
      "timestamp": "07:15"
    },
    {
      "start": 438.56,
      "duration": 3.199,
      "text": "really change drastically",
      "timestamp": "07:18"
    },
    {
      "start": 441.759,
      "duration": 2.16,
      "text": "the latency and the throughput in that",
      "timestamp": "07:21"
    },
    {
      "start": 443.919,
      "duration": 3.521,
      "text": "domain our next two products uh which",
      "timestamp": "07:23"
    },
    {
      "start": 447.44,
      "duration": 2.4,
      "text": "we've already done a lot of the work on",
      "timestamp": "07:27"
    },
    {
      "start": 449.84,
      "duration": 2.32,
      "text": "uh but uh but haven't put on on test net",
      "timestamp": "07:29"
    },
    {
      "start": 452.16,
      "duration": 3.439,
      "text": "yet are the DROM so the the read only",
      "timestamp": "07:32"
    },
    {
      "start": 455.599,
      "duration": 3.6,
      "text": "memory you know the the the ledger side",
      "timestamp": "07:35"
    },
    {
      "start": 459.199,
      "duration": 2.081,
      "text": "uh where you need to have durable and",
      "timestamp": "07:39"
    },
    {
      "start": 461.28,
      "duration": 2.639,
      "text": "efficient data storage and then the DRAM",
      "timestamp": "07:41"
    },
    {
      "start": 463.919,
      "duration": 3.28,
      "text": "where you also need the extra twist of",
      "timestamp": "07:43"
    },
    {
      "start": 467.199,
      "duration": 3.041,
      "text": "consistency right so so that everything",
      "timestamp": "07:47"
    },
    {
      "start": 470.24,
      "duration": 3.519,
      "text": "looks to you as though it was done in a",
      "timestamp": "07:50"
    },
    {
      "start": 473.759,
      "duration": 1.921,
      "text": "central control",
      "timestamp": "07:53"
    },
    {
      "start": 475.68,
      "duration": 3.28,
      "text": "RAM on a single computer even though",
      "timestamp": "07:55"
    },
    {
      "start": 478.96,
      "duration": 2.72,
      "text": "it's actually completely decentralized",
      "timestamp": "07:58"
    },
    {
      "start": 481.68,
      "duration": 2.48,
      "text": "um and that's basically keeping uh the",
      "timestamp": "08:01"
    },
    {
      "start": 484.16,
      "duration": 2.719,
      "text": "state machine versus keeping the ledger",
      "timestamp": "08:04"
    },
    {
      "start": 486.879,
      "duration": 1.921,
      "text": "where you're just adding but you're not",
      "timestamp": "08:06"
    },
    {
      "start": 488.8,
      "duration": 1.519,
      "text": "changing things that you've already",
      "timestamp": "08:08"
    },
    {
      "start": 490.319,
      "duration": 1.841,
      "text": "written",
      "timestamp": "08:10"
    },
    {
      "start": 492.16,
      "duration": 3.68,
      "text": "okay so I told you that we do better uh",
      "timestamp": "08:12"
    },
    {
      "start": 495.84,
      "duration": 2.96,
      "text": "and you know we we now have to show you",
      "timestamp": "08:15"
    },
    {
      "start": 498.8,
      "duration": 1.76,
      "text": "now I have to show you that indeed we do",
      "timestamp": "08:18"
    },
    {
      "start": 500.56,
      "duration": 1.759,
      "text": "better and here's some of the",
      "timestamp": "08:20"
    },
    {
      "start": 502.319,
      "duration": 2.641,
      "text": "performance benchmarks this is from our",
      "timestamp": "08:22"
    },
    {
      "start": 504.96,
      "duration": 2.72,
      "text": "private test net uh I'll tell you later",
      "timestamp": "08:24"
    },
    {
      "start": 507.68,
      "duration": 1.919,
      "text": "who some of our part who our partners",
      "timestamp": "08:27"
    },
    {
      "start": 509.599,
      "duration": 2.0,
      "text": "are in that private test net but I'd",
      "timestamp": "08:29"
    },
    {
      "start": 511.599,
      "duration": 1.919,
      "text": "like to spend a little bit more time on",
      "timestamp": "08:31"
    },
    {
      "start": 513.519,
      "duration": 3.999,
      "text": "this uh on this slide okay so what do we",
      "timestamp": "08:33"
    },
    {
      "start": 517.519,
      "duration": 3.841,
      "text": "have down here uh on the obsa is the",
      "timestamp": "08:37"
    },
    {
      "start": 521.36,
      "duration": 3.36,
      "text": "message size and",
      "timestamp": "08:41"
    },
    {
      "start": 524.72,
      "duration": 2.08,
      "text": "what I have on the left hand side is the",
      "timestamp": "08:44"
    },
    {
      "start": 526.8,
      "duration": 3.84,
      "text": "average latency in milliseconds",
      "timestamp": "08:46"
    },
    {
      "start": 530.64,
      "duration": 1.92,
      "text": "and on the right hand side is the",
      "timestamp": "08:50"
    },
    {
      "start": 532.56,
      "duration": 2.719,
      "text": "standard deviation okay so basically",
      "timestamp": "08:52"
    },
    {
      "start": 535.279,
      "duration": 1.921,
      "text": "this is the mean this is the first",
      "timestamp": "08:55"
    },
    {
      "start": 537.2,
      "duration": 4.16,
      "text": "moment and that's the standard deviation",
      "timestamp": "08:57"
    },
    {
      "start": 541.36,
      "duration": 2.0,
      "text": "that's a square root of the second",
      "timestamp": "09:01"
    },
    {
      "start": 543.36,
      "duration": 2.88,
      "text": "moment all right so you want of course",
      "timestamp": "09:03"
    },
    {
      "start": 546.24,
      "duration": 2.88,
      "text": "the mean to be as low as possible but",
      "timestamp": "09:06"
    },
    {
      "start": 549.12,
      "duration": 2.399,
      "text": "you also want",
      "timestamp": "09:09"
    },
    {
      "start": 551.519,
      "duration": 1.76,
      "text": "the standard deviation to be as low as",
      "timestamp": "09:11"
    },
    {
      "start": 553.279,
      "duration": 3.201,
      "text": "possible why well first of all you'd",
      "timestamp": "09:13"
    },
    {
      "start": 556.48,
      "duration": 2.479,
      "text": "like things to be",
      "timestamp": "09:16"
    },
    {
      "start": 558.959,
      "duration": 3.601,
      "text": "not uncertain and actually you know for",
      "timestamp": "09:18"
    },
    {
      "start": 562.56,
      "duration": 2.24,
      "text": "all of you out there who who maybe have",
      "timestamp": "09:22"
    },
    {
      "start": 564.8,
      "duration": 2.08,
      "text": "studied EQing you know there was there",
      "timestamp": "09:24"
    },
    {
      "start": 566.88,
      "duration": 1.28,
      "text": "was actually a really interesting",
      "timestamp": "09:26"
    },
    {
      "start": 568.16,
      "duration": 4.0,
      "text": "conversation recently uh on X uh about",
      "timestamp": "09:28"
    },
    {
      "start": 572.16,
      "duration": 2.56,
      "text": "you know how uh you know how how going",
      "timestamp": "09:32"
    },
    {
      "start": 574.72,
      "duration": 4.0,
      "text": "to to um uh smaller message sizes was",
      "timestamp": "09:34"
    },
    {
      "start": 578.72,
      "duration": 1.84,
      "text": "was helping and I I I jumped in and I",
      "timestamp": "09:38"
    },
    {
      "start": 580.56,
      "duration": 1.36,
      "text": "said well you know it's it's because",
      "timestamp": "09:40"
    },
    {
      "start": 581.92,
      "duration": 2.64,
      "text": "something called uh the polychin",
      "timestamp": "09:41"
    },
    {
      "start": 584.56,
      "duration": 2.16,
      "text": "equation and the polychin equation tells",
      "timestamp": "09:44"
    },
    {
      "start": 586.72,
      "duration": 3.679,
      "text": "you that actually having this variance",
      "timestamp": "09:46"
    },
    {
      "start": 590.399,
      "duration": 3.44,
      "text": "the second moment be large hurts you not",
      "timestamp": "09:50"
    },
    {
      "start": 593.839,
      "duration": 3.44,
      "text": "just you know in sort of uh a user",
      "timestamp": "09:53"
    },
    {
      "start": 597.279,
      "duration": 2.881,
      "text": "experience but actually also contributes",
      "timestamp": "09:57"
    },
    {
      "start": 600.16,
      "duration": 2.48,
      "text": "to higher delays the variance actually",
      "timestamp": "10:00"
    },
    {
      "start": 602.64,
      "duration": 3.04,
      "text": "at a system level um contributes to to",
      "timestamp": "10:02"
    },
    {
      "start": 605.68,
      "duration": 2.48,
      "text": "higher delays so we want the first one",
      "timestamp": "10:05"
    },
    {
      "start": 608.16,
      "duration": 2.4,
      "text": "to be low but we also want at a system",
      "timestamp": "10:08"
    },
    {
      "start": 610.56,
      "duration": 2.88,
      "text": "level the second one to be to be as low",
      "timestamp": "10:10"
    },
    {
      "start": 613.44,
      "duration": 2.8,
      "text": "as possible and what you can see is that",
      "timestamp": "10:13"
    },
    {
      "start": 616.24,
      "duration": 2.8,
      "text": "we get a benefit um this is comparing",
      "timestamp": "10:16"
    },
    {
      "start": 619.04,
      "duration": 2.64,
      "text": "gossip sum so effectively what is",
      "timestamp": "10:19"
    },
    {
      "start": 621.68,
      "duration": 2.96,
      "text": "currently in ethereum with optimum P2P",
      "timestamp": "10:21"
    },
    {
      "start": 624.64,
      "duration": 2.639,
      "text": "and you can see at 2 megabytes 4",
      "timestamp": "10:24"
    },
    {
      "start": 627.279,
      "duration": 3.68,
      "text": "megabytes 6 megabyte 8 megabyte so you",
      "timestamp": "10:27"
    },
    {
      "start": 630.959,
      "duration": 2.56,
      "text": "see a steady improvement but also an",
      "timestamp": "10:30"
    },
    {
      "start": 633.519,
      "duration": 2.961,
      "text": "improvement that's highly nonlinear",
      "timestamp": "10:33"
    },
    {
      "start": 636.48,
      "duration": 3.599,
      "text": "again why is it highly nonlinear uh for",
      "timestamp": "10:36"
    },
    {
      "start": 640.079,
      "duration": 2.161,
      "text": "all of you who took queuing at some",
      "timestamp": "10:40"
    },
    {
      "start": 642.24,
      "duration": 2.0,
      "text": "stage and for all of you who didn't take",
      "timestamp": "10:42"
    },
    {
      "start": 644.24,
      "duration": 2.4,
      "text": "queuing it's because you have a very",
      "timestamp": "10:44"
    },
    {
      "start": 646.64,
      "duration": 4.319,
      "text": "very nonlinear relation between delay",
      "timestamp": "10:46"
    },
    {
      "start": 650.959,
      "duration": 2.801,
      "text": "and utilization so as you're trying to",
      "timestamp": "10:50"
    },
    {
      "start": 653.76,
      "duration": 3.44,
      "text": "put in more throughput your utilization",
      "timestamp": "10:53"
    },
    {
      "start": 657.2,
      "duration": 3.68,
      "text": "goes up and as utilization goes up your",
      "timestamp": "10:57"
    },
    {
      "start": 660.88,
      "duration": 2.0,
      "text": "delay your latency goes up in a",
      "timestamp": "11:00"
    },
    {
      "start": 662.88,
      "duration": 2.24,
      "text": "completely nonlinear way for that this",
      "timestamp": "11:02"
    },
    {
      "start": 665.12,
      "duration": 2.159,
      "text": "is something that we experience all the",
      "timestamp": "11:05"
    },
    {
      "start": 667.279,
      "duration": 2.0,
      "text": "time particularly if you live in a place",
      "timestamp": "11:07"
    },
    {
      "start": 669.279,
      "duration": 1.921,
      "text": "which maybe has some congestion on the",
      "timestamp": "11:09"
    },
    {
      "start": 671.2,
      "duration": 2.0,
      "text": "roads you know you're on the road",
      "timestamp": "11:11"
    },
    {
      "start": 673.2,
      "duration": 2.319,
      "text": "everything looks great",
      "timestamp": "11:13"
    },
    {
      "start": 675.519,
      "duration": 4.0,
      "text": "you know it's it's uh",
      "timestamp": "11:15"
    },
    {
      "start": 679.519,
      "duration": 1.521,
      "text": "okay it's just it's just going really",
      "timestamp": "11:19"
    },
    {
      "start": 681.04,
      "duration": 2.239,
      "text": "well and then you know you have a very",
      "timestamp": "11:21"
    },
    {
      "start": 683.279,
      "duration": 1.921,
      "text": "short period of time when it looks like",
      "timestamp": "11:23"
    },
    {
      "start": 685.2,
      "duration": 2.24,
      "text": "it's a little congested but you're still",
      "timestamp": "11:25"
    },
    {
      "start": 687.44,
      "duration": 2.8,
      "text": "going uh going uh you know as fast as",
      "timestamp": "11:27"
    },
    {
      "start": 690.24,
      "duration": 3.12,
      "text": "you want and then bam you got a traffic",
      "timestamp": "11:30"
    },
    {
      "start": 693.36,
      "duration": 2.159,
      "text": "jam okay and it's because there's",
      "timestamp": "11:33"
    },
    {
      "start": 695.519,
      "duration": 4.32,
      "text": "actually a very short interval between",
      "timestamp": "11:35"
    },
    {
      "start": 699.839,
      "duration": 3.361,
      "text": "being really low utilization and not",
      "timestamp": "11:39"
    },
    {
      "start": 703.2,
      "duration": 3.68,
      "text": "congested and low delay and having high",
      "timestamp": "11:43"
    },
    {
      "start": 706.88,
      "duration": 1.76,
      "text": "utilization being congested and having",
      "timestamp": "11:46"
    },
    {
      "start": 708.64,
      "duration": 2.879,
      "text": "delay so basically because we are able",
      "timestamp": "11:48"
    },
    {
      "start": 711.519,
      "duration": 3.361,
      "text": "to accommodate a higher throughput it's",
      "timestamp": "11:51"
    },
    {
      "start": 714.88,
      "duration": 2.56,
      "text": "as though I was adding more lanes in",
      "timestamp": "11:54"
    },
    {
      "start": 717.44,
      "duration": 1.839,
      "text": "your highway okay because you know that",
      "timestamp": "11:57"
    },
    {
      "start": 719.279,
      "duration": 1.841,
      "text": "if you had more lanes in your highway",
      "timestamp": "11:59"
    },
    {
      "start": 721.12,
      "duration": 3.279,
      "text": "you wouldn't get that uh traffic jam as",
      "timestamp": "12:01"
    },
    {
      "start": 724.399,
      "duration": 1.601,
      "text": "quickly right it would take a lot lot",
      "timestamp": "12:04"
    },
    {
      "start": 726.0,
      "duration": 1.68,
      "text": "longer to get a traffic jam and",
      "timestamp": "12:06"
    },
    {
      "start": 727.68,
      "duration": 1.76,
      "text": "therefore you wouldn't have that delay",
      "timestamp": "12:07"
    },
    {
      "start": 729.44,
      "duration": 1.519,
      "text": "that's exactly what's happening there so",
      "timestamp": "12:09"
    },
    {
      "start": 730.959,
      "duration": 2.961,
      "text": "you can see that very very nonlinear uh",
      "timestamp": "12:10"
    },
    {
      "start": 733.92,
      "duration": 2.4,
      "text": "behavior and that's extremely important",
      "timestamp": "12:13"
    },
    {
      "start": 736.32,
      "duration": 2.72,
      "text": "for us uh and especially when you look",
      "timestamp": "12:16"
    },
    {
      "start": 739.04,
      "duration": 2.72,
      "text": "at Ethereum it's extremely important as",
      "timestamp": "12:19"
    },
    {
      "start": 741.76,
      "duration": 2.56,
      "text": "we're looking to have our message sizes",
      "timestamp": "12:21"
    },
    {
      "start": 744.32,
      "duration": 2.8,
      "text": "get bigger and bigger for a variety uh",
      "timestamp": "12:24"
    },
    {
      "start": 747.12,
      "duration": 3.959,
      "text": "for a variety of reasons",
      "timestamp": "12:27"
    },
    {
      "start": 751.279,
      "duration": 2.721,
      "text": "okay I just want to touch very briefly",
      "timestamp": "12:31"
    },
    {
      "start": 754.0,
      "duration": 2.48,
      "text": "on how we do it right i think the",
      "timestamp": "12:34"
    },
    {
      "start": 756.48,
      "duration": 3.76,
      "text": "important thing is more what it does but",
      "timestamp": "12:36"
    },
    {
      "start": 760.24,
      "duration": 2.56,
      "text": "it's uh it's fun and I think it's",
      "timestamp": "12:40"
    },
    {
      "start": 762.8,
      "duration": 3.2,
      "text": "important to just touch briefly on how",
      "timestamp": "12:42"
    },
    {
      "start": 766.0,
      "duration": 4.0,
      "text": "we do it so the way we do it is we use",
      "timestamp": "12:46"
    },
    {
      "start": 770.0,
      "duration": 3.279,
      "text": "uh we use coding uh where coding is",
      "timestamp": "12:50"
    },
    {
      "start": 773.279,
      "duration": 3.441,
      "text": "making algebraic combinations and how we",
      "timestamp": "12:53"
    },
    {
      "start": 776.72,
      "duration": 2.08,
      "text": "make these algebraic combinations is we",
      "timestamp": "12:56"
    },
    {
      "start": 778.8,
      "duration": 2.4,
      "text": "make them using galwa fields so Evaristo",
      "timestamp": "12:58"
    },
    {
      "start": 781.2,
      "duration": 2.879,
      "text": "Galwa you know local local person well",
      "timestamp": "13:01"
    },
    {
      "start": 784.079,
      "duration": 2.32,
      "text": "actually no he was from Bular up up near",
      "timestamp": "13:04"
    },
    {
      "start": 786.399,
      "duration": 3.201,
      "text": "uh Paris but um you know basically came",
      "timestamp": "13:06"
    },
    {
      "start": 789.6,
      "duration": 1.679,
      "text": "up with this notion which is kind of",
      "timestamp": "13:09"
    },
    {
      "start": 791.279,
      "duration": 2.721,
      "text": "like a generalization of George Bull's",
      "timestamp": "13:11"
    },
    {
      "start": 794.0,
      "duration": 2.24,
      "text": "binary just two he he basically thought",
      "timestamp": "13:14"
    },
    {
      "start": 796.24,
      "duration": 3.44,
      "text": "of going beyond two um and what we do is",
      "timestamp": "13:16"
    },
    {
      "start": 799.68,
      "duration": 2.88,
      "text": "we take representations in these uh",
      "timestamp": "13:19"
    },
    {
      "start": 802.56,
      "duration": 3.92,
      "text": "algebraic finite fields um and we mix",
      "timestamp": "13:22"
    },
    {
      "start": 806.48,
      "duration": 4.08,
      "text": "them in a completely decentralized way",
      "timestamp": "13:26"
    },
    {
      "start": 810.56,
      "duration": 1.92,
      "text": "which is why I talk here about a",
      "timestamp": "13:30"
    },
    {
      "start": 812.48,
      "duration": 2.56,
      "text": "decentralized code this is very",
      "timestamp": "13:32"
    },
    {
      "start": 815.04,
      "duration": 2.239,
      "text": "different from codes you may have heard",
      "timestamp": "13:35"
    },
    {
      "start": 817.279,
      "duration": 4.401,
      "text": "of for instance um in traditional uh DA",
      "timestamp": "13:37"
    },
    {
      "start": 821.68,
      "duration": 1.44,
      "text": "where you use something called read",
      "timestamp": "13:41"
    },
    {
      "start": 823.12,
      "duration": 3.76,
      "text": "Solomon codes um or you may have seen",
      "timestamp": "13:43"
    },
    {
      "start": 826.88,
      "duration": 5.28,
      "text": "things like um uh like repto codes um",
      "timestamp": "13:46"
    },
    {
      "start": 832.16,
      "duration": 2.16,
      "text": "and things like monot and so on those",
      "timestamp": "13:52"
    },
    {
      "start": 834.32,
      "duration": 3.759,
      "text": "are end to end centralized codes this is",
      "timestamp": "13:54"
    },
    {
      "start": 838.079,
      "duration": 2.721,
      "text": "a completely decentralized code and in",
      "timestamp": "13:58"
    },
    {
      "start": 840.8,
      "duration": 3.12,
      "text": "particular you have this unique ability",
      "timestamp": "14:00"
    },
    {
      "start": 843.92,
      "duration": 3.279,
      "text": "to take coded pieces and create a new",
      "timestamp": "14:03"
    },
    {
      "start": 847.199,
      "duration": 3.44,
      "text": "coded piece without ever decoding",
      "timestamp": "14:07"
    },
    {
      "start": 850.639,
      "duration": 2.56,
      "text": "and this is providing that completely",
      "timestamp": "14:10"
    },
    {
      "start": 853.199,
      "duration": 1.841,
      "text": "decentralized",
      "timestamp": "14:13"
    },
    {
      "start": 855.04,
      "duration": 4.239,
      "text": "propagation and will later be the basis",
      "timestamp": "14:15"
    },
    {
      "start": 859.279,
      "duration": 4.081,
      "text": "for decentralized memory both ROM and",
      "timestamp": "14:19"
    },
    {
      "start": 863.36,
      "duration": 3.52,
      "text": "RAM by having this RLNC only",
      "timestamp": "14:23"
    },
    {
      "start": 866.88,
      "duration": 2.0,
      "text": "composability that's what we're",
      "timestamp": "14:26"
    },
    {
      "start": 868.88,
      "duration": 1.6,
      "text": "implementing",
      "timestamp": "14:28"
    },
    {
      "start": 870.48,
      "duration": 2.32,
      "text": "and the reason we're called optimum is",
      "timestamp": "14:30"
    },
    {
      "start": 872.8,
      "duration": 2.8,
      "text": "because that is actually optimum uh if",
      "timestamp": "14:32"
    },
    {
      "start": 875.6,
      "duration": 1.76,
      "text": "any of you are going to be tomorrow at",
      "timestamp": "14:35"
    },
    {
      "start": 877.36,
      "duration": 3.039,
      "text": "the P2P event I'll I'll nerd out a",
      "timestamp": "14:37"
    },
    {
      "start": 880.399,
      "duration": 2.88,
      "text": "little bit more and show you the math of",
      "timestamp": "14:40"
    },
    {
      "start": 883.279,
      "duration": 2.961,
      "text": "why why it's actually optimum so if",
      "timestamp": "14:43"
    },
    {
      "start": 886.24,
      "duration": 1.76,
      "text": "you're interested happy to talk",
      "timestamp": "14:46"
    },
    {
      "start": 888.0,
      "duration": 2.16,
      "text": "afterwards or happy to to catch up with",
      "timestamp": "14:48"
    },
    {
      "start": 890.16,
      "duration": 3.44,
      "text": "you tomorrow uh but basically you cannot",
      "timestamp": "14:50"
    },
    {
      "start": 893.6,
      "duration": 2.56,
      "text": "do better interestingly enough you know",
      "timestamp": "14:53"
    },
    {
      "start": 896.16,
      "duration": 1.6,
      "text": "there's always a lot of discussion",
      "timestamp": "14:56"
    },
    {
      "start": 897.76,
      "duration": 2.56,
      "text": "around well you know uh should are you",
      "timestamp": "14:57"
    },
    {
      "start": 900.32,
      "duration": 2.079,
      "text": "better off being centralized and you",
      "timestamp": "15:00"
    },
    {
      "start": 902.399,
      "duration": 1.68,
      "text": "want to be decentralized but you're",
      "timestamp": "15:02"
    },
    {
      "start": 904.079,
      "duration": 3.841,
      "text": "actually just um you know",
      "timestamp": "15:04"
    },
    {
      "start": 907.92,
      "duration": 3.12,
      "text": "having to sacrifice something if you",
      "timestamp": "15:07"
    },
    {
      "start": 911.04,
      "duration": 3.599,
      "text": "gave me a centralized scheduler that",
      "timestamp": "15:11"
    },
    {
      "start": 914.639,
      "duration": 2.0,
      "text": "knew everything that was going on in the",
      "timestamp": "15:14"
    },
    {
      "start": 916.639,
      "duration": 2.64,
      "text": "network and could actually distribute",
      "timestamp": "15:16"
    },
    {
      "start": 919.279,
      "duration": 3.601,
      "text": "just so versus this completely",
      "timestamp": "15:19"
    },
    {
      "start": 922.88,
      "duration": 1.6,
      "text": "decentralized",
      "timestamp": "15:22"
    },
    {
      "start": 924.48,
      "duration": 3.039,
      "text": "stateless system where we don't actually",
      "timestamp": "15:24"
    },
    {
      "start": 927.519,
      "duration": 3.12,
      "text": "even care at any node what other nodes",
      "timestamp": "15:27"
    },
    {
      "start": 930.639,
      "duration": 2.801,
      "text": "are doing you can prove it's the same",
      "timestamp": "15:30"
    },
    {
      "start": 933.44,
      "duration": 2.88,
      "text": "you would not do better if you had a",
      "timestamp": "15:33"
    },
    {
      "start": 936.32,
      "duration": 2.8,
      "text": "controller and that's not often the case",
      "timestamp": "15:36"
    },
    {
      "start": 939.12,
      "duration": 2.56,
      "text": "right so how often can you show that if",
      "timestamp": "15:39"
    },
    {
      "start": 941.68,
      "duration": 3.36,
      "text": "somebody gave you an omnisient",
      "timestamp": "15:41"
    },
    {
      "start": 945.04,
      "duration": 1.76,
      "text": "you know",
      "timestamp": "15:45"
    },
    {
      "start": 946.8,
      "duration": 3.12,
      "text": "completely competent scheduler and",
      "timestamp": "15:46"
    },
    {
      "start": 949.92,
      "duration": 2.08,
      "text": "instead you had this approach where you",
      "timestamp": "15:49"
    },
    {
      "start": 952.0,
      "duration": 3.199,
      "text": "have absolutely no idea what the other",
      "timestamp": "15:52"
    },
    {
      "start": 955.199,
      "duration": 2.56,
      "text": "nodes are doing and you actually don't",
      "timestamp": "15:55"
    },
    {
      "start": 957.759,
      "duration": 3.281,
      "text": "care that the two will do the same",
      "timestamp": "15:57"
    },
    {
      "start": 961.04,
      "duration": 1.919,
      "text": "that's basically what we can show and",
      "timestamp": "16:01"
    },
    {
      "start": 962.959,
      "duration": 1.44,
      "text": "that's really what you're seeing that's",
      "timestamp": "16:02"
    },
    {
      "start": 964.399,
      "duration": 2.321,
      "text": "why you're seeing this great gains we",
      "timestamp": "16:04"
    },
    {
      "start": 966.72,
      "duration": 2.799,
      "text": "are getting the best performance",
      "timestamp": "16:06"
    },
    {
      "start": 969.519,
      "duration": 3.76,
      "text": "possible provably from the resources",
      "timestamp": "16:09"
    },
    {
      "start": 973.279,
      "duration": 1.36,
      "text": "that are available and that's what",
      "timestamp": "16:13"
    },
    {
      "start": 974.639,
      "duration": 2.961,
      "text": "optimum does and this is basically what",
      "timestamp": "16:14"
    },
    {
      "start": 977.6,
      "duration": 2.799,
      "text": "I've been working on in my lab now for",
      "timestamp": "16:17"
    },
    {
      "start": 980.399,
      "duration": 3.12,
      "text": "about two decades so you know it takes a",
      "timestamp": "16:20"
    },
    {
      "start": 983.519,
      "duration": 3.361,
      "text": "long time to go from from the math uh to",
      "timestamp": "16:23"
    },
    {
      "start": 986.88,
      "duration": 3.28,
      "text": "the uh to the actual uh implementation",
      "timestamp": "16:26"
    },
    {
      "start": 990.16,
      "duration": 2.08,
      "text": "uh and this is this is really what what",
      "timestamp": "16:30"
    },
    {
      "start": 992.24,
      "duration": 1.76,
      "text": "you're seeing",
      "timestamp": "16:32"
    },
    {
      "start": 994.0,
      "duration": 2.639,
      "text": "okay so who's going to benefit from this",
      "timestamp": "16:34"
    },
    {
      "start": 996.639,
      "duration": 3.76,
      "text": "well you know everybody L1's and L2s",
      "timestamp": "16:36"
    },
    {
      "start": 1000.399,
      "duration": 3.201,
      "text": "validators DAPs end users",
      "timestamp": "16:40"
    },
    {
      "start": 1003.6,
      "duration": 3.919,
      "text": "things going faster higher throughput",
      "timestamp": "16:43"
    },
    {
      "start": 1007.519,
      "duration": 3.841,
      "text": "and basically cheaper you know everybody",
      "timestamp": "16:47"
    },
    {
      "start": 1011.36,
      "duration": 2.8,
      "text": "everybody gets a gain from this so I",
      "timestamp": "16:51"
    },
    {
      "start": 1014.16,
      "duration": 2.239,
      "text": "mentioned to you our test net I showed",
      "timestamp": "16:54"
    },
    {
      "start": 1016.399,
      "duration": 3.761,
      "text": "you some results on test net we just",
      "timestamp": "16:56"
    },
    {
      "start": 1020.16,
      "duration": 3.52,
      "text": "announced very recently who our partners",
      "timestamp": "17:00"
    },
    {
      "start": 1023.68,
      "duration": 3.118,
      "text": "are so we are extremely ly fortunate to",
      "timestamp": "17:03"
    },
    {
      "start": 1026.799,
      "duration": 3.52,
      "text": "be working with a fantastic set uh of of",
      "timestamp": "17:06"
    },
    {
      "start": 1030.319,
      "duration": 3.359,
      "text": "partners uh some of them actually are uh",
      "timestamp": "17:10"
    },
    {
      "start": 1033.679,
      "duration": 4.16,
      "text": "are here um at ETHCC and uh looking",
      "timestamp": "17:13"
    },
    {
      "start": 1037.839,
      "duration": 2.48,
      "text": "forward to to catching up with them um",
      "timestamp": "17:17"
    },
    {
      "start": 1040.319,
      "duration": 1.599,
      "text": "and and they've been they've been really",
      "timestamp": "17:20"
    },
    {
      "start": 1041.919,
      "duration": 2.561,
      "text": "fantastic and and it's it's really them",
      "timestamp": "17:21"
    },
    {
      "start": 1044.48,
      "duration": 2.0,
      "text": "and you know I encourage you again to to",
      "timestamp": "17:24"
    },
    {
      "start": 1046.48,
      "duration": 2.64,
      "text": "take a look um if you want on AXA what",
      "timestamp": "17:26"
    },
    {
      "start": 1049.12,
      "duration": 2.4,
      "text": "we've uh what uh we've been doing it's",
      "timestamp": "17:29"
    },
    {
      "start": 1051.52,
      "duration": 4.0,
      "text": "really them who have been you know the",
      "timestamp": "17:31"
    },
    {
      "start": 1055.52,
      "duration": 2.08,
      "text": "the verification",
      "timestamp": "17:35"
    },
    {
      "start": 1057.6,
      "duration": 1.92,
      "text": "uh that what we're doing is really",
      "timestamp": "17:37"
    },
    {
      "start": 1059.52,
      "duration": 2.88,
      "text": "inherently inherently useful so with",
      "timestamp": "17:39"
    },
    {
      "start": 1062.4,
      "duration": 4.159,
      "text": "that um check us out we'd love to chat",
      "timestamp": "17:42"
    },
    {
      "start": 1066.559,
      "duration": 3.441,
      "text": "um we as I said right now we are on",
      "timestamp": "17:46"
    },
    {
      "start": 1070.0,
      "duration": 2.799,
      "text": "private testnet um you know we'll be",
      "timestamp": "17:50"
    },
    {
      "start": 1072.799,
      "duration": 3.12,
      "text": "looking at going uh on a public um next",
      "timestamp": "17:52"
    },
    {
      "start": 1075.919,
      "duration": 3.201,
      "text": "uh to to Hoodie and then and then to to",
      "timestamp": "17:55"
    },
    {
      "start": 1079.12,
      "duration": 3.84,
      "text": "having we hope a a public test net and",
      "timestamp": "17:59"
    },
    {
      "start": 1082.96,
      "duration": 2.4,
      "text": "um really looking to for forward to any",
      "timestamp": "18:02"
    },
    {
      "start": 1085.36,
      "duration": 1.52,
      "text": "questions that you may have with that i",
      "timestamp": "18:05"
    },
    {
      "start": 1086.88,
      "duration": 3.72,
      "text": "think we have a couple minutes",
      "timestamp": "18:06"
    },
    {
      "start": 1092.64,
      "duration": 1.76,
      "text": "great",
      "timestamp": "18:12"
    },
    {
      "start": 1094.4,
      "duration": 2.8,
      "text": "are there any questions uh one and two",
      "timestamp": "18:14"
    },
    {
      "start": 1097.2,
      "duration": 3.64,
      "text": "and three yes",
      "timestamp": "18:17"
    },
    {
      "start": 1100.96,
      "duration": 3.2,
      "text": "thank you i was wondering with RLNC like",
      "timestamp": "18:20"
    },
    {
      "start": 1104.16,
      "duration": 2.399,
      "text": "how many times are you able to encode",
      "timestamp": "18:24"
    },
    {
      "start": 1106.559,
      "duration": 1.601,
      "text": "and",
      "timestamp": "18:26"
    },
    {
      "start": 1108.16,
      "duration": 3.12,
      "text": "thank you um I was wondering with RLNC",
      "timestamp": "18:28"
    },
    {
      "start": 1111.28,
      "duration": 1.759,
      "text": "how many times are you able to encode",
      "timestamp": "18:31"
    },
    {
      "start": 1113.039,
      "duration": 2.161,
      "text": "and if you do that a number of times",
      "timestamp": "18:33"
    },
    {
      "start": 1115.2,
      "duration": 2.16,
      "text": "then does the latency also decrease and",
      "timestamp": "18:35"
    },
    {
      "start": 1117.36,
      "duration": 2.319,
      "text": "with what function thank you yeah very",
      "timestamp": "18:37"
    },
    {
      "start": 1119.679,
      "duration": 2.801,
      "text": "good question so um because it is",
      "timestamp": "18:39"
    },
    {
      "start": 1122.48,
      "duration": 2.96,
      "text": "unstructured uh you can actually in keep",
      "timestamp": "18:42"
    },
    {
      "start": 1125.44,
      "duration": 2.8,
      "text": "a re-encoding indefinitely",
      "timestamp": "18:45"
    },
    {
      "start": 1128.24,
      "duration": 4.319,
      "text": "so you basically modify um a header with",
      "timestamp": "18:48"
    },
    {
      "start": 1132.559,
      "duration": 2.721,
      "text": "the uh with the coefficients and the mo",
      "timestamp": "18:52"
    },
    {
      "start": 1135.28,
      "duration": 2.08,
      "text": "the coefficients just gets updated so",
      "timestamp": "18:55"
    },
    {
      "start": 1137.36,
      "duration": 1.92,
      "text": "you cannot look at a network coded",
      "timestamp": "18:57"
    },
    {
      "start": 1139.28,
      "duration": 1.6,
      "text": "packet and even know how many times it's",
      "timestamp": "18:59"
    },
    {
      "start": 1140.88,
      "duration": 2.48,
      "text": "been re-encoded uh it you're not",
      "timestamp": "19:00"
    },
    {
      "start": 1143.36,
      "duration": 2.16,
      "text": "appending new coefficients you're",
      "timestamp": "19:03"
    },
    {
      "start": 1145.52,
      "duration": 2.159,
      "text": "modifying the existing coefficients so",
      "timestamp": "19:05"
    },
    {
      "start": 1147.679,
      "duration": 1.841,
      "text": "you can keep doing it for as long as you",
      "timestamp": "19:07"
    },
    {
      "start": 1149.52,
      "duration": 2.24,
      "text": "want and it's very fast so it doesn't",
      "timestamp": "19:09"
    },
    {
      "start": 1151.76,
      "duration": 2.96,
      "text": "add to the latency very good question",
      "timestamp": "19:11"
    },
    {
      "start": 1154.72,
      "duration": 2.64,
      "text": "thank you so much two",
      "timestamp": "19:14"
    },
    {
      "start": 1157.36,
      "duration": 2.8,
      "text": "yeah um I'm wondering um Ethereum pretty",
      "timestamp": "19:17"
    },
    {
      "start": 1160.16,
      "duration": 2.56,
      "text": "much have like block sizes of 150",
      "timestamp": "19:20"
    },
    {
      "start": 1162.72,
      "duration": 2.959,
      "text": "kilobytes like how well does it compare",
      "timestamp": "19:22"
    },
    {
      "start": 1165.679,
      "duration": 1.761,
      "text": "this new method to with existing like",
      "timestamp": "19:25"
    },
    {
      "start": 1167.44,
      "duration": 1.92,
      "text": "smaller messages yeah that's a good",
      "timestamp": "19:27"
    },
    {
      "start": 1169.36,
      "duration": 3.199,
      "text": "question uh so we did with the smaller",
      "timestamp": "19:29"
    },
    {
      "start": 1172.559,
      "duration": 1.761,
      "text": "messages we started with that we were",
      "timestamp": "19:32"
    },
    {
      "start": 1174.32,
      "duration": 3.28,
      "text": "getting about a 2x benefit",
      "timestamp": "19:34"
    },
    {
      "start": 1177.6,
      "duration": 2.8,
      "text": "um the really nonlinear benefit which I",
      "timestamp": "19:37"
    },
    {
      "start": 1180.4,
      "duration": 1.68,
      "text": "was showing you know gets as the number",
      "timestamp": "19:40"
    },
    {
      "start": 1182.08,
      "duration": 2.08,
      "text": "of messages goes as the size of the",
      "timestamp": "19:42"
    },
    {
      "start": 1184.16,
      "duration": 3.2,
      "text": "message goes up or alternatively if you",
      "timestamp": "19:44"
    },
    {
      "start": 1187.36,
      "duration": 4.319,
      "text": "have small messages but a lot of demand",
      "timestamp": "19:47"
    },
    {
      "start": 1191.679,
      "duration": 3.041,
      "text": "okay so uh here I only showed in terms",
      "timestamp": "19:51"
    },
    {
      "start": 1194.72,
      "duration": 1.68,
      "text": "of the size of the messages because it's",
      "timestamp": "19:54"
    },
    {
      "start": 1196.4,
      "duration": 2.399,
      "text": "a little easier to to just uh control",
      "timestamp": "19:56"
    },
    {
      "start": 1198.799,
      "duration": 2.481,
      "text": "one item at a time but even if you have",
      "timestamp": "19:58"
    },
    {
      "start": 1201.28,
      "duration": 3.2,
      "text": "small messages but you have um but you",
      "timestamp": "20:01"
    },
    {
      "start": 1204.48,
      "duration": 2.559,
      "text": "have a high uh high utilization high",
      "timestamp": "20:04"
    },
    {
      "start": 1207.039,
      "duration": 2.401,
      "text": "demand then you still see that that",
      "timestamp": "20:07"
    },
    {
      "start": 1209.44,
      "duration": 2.72,
      "text": "nonlinear behavior so even with small",
      "timestamp": "20:09"
    },
    {
      "start": 1212.16,
      "duration": 1.6,
      "text": "messages and high demand you will see",
      "timestamp": "20:12"
    },
    {
      "start": 1213.76,
      "duration": 2.72,
      "text": "that uh that nonlinear behavior is this",
      "timestamp": "20:13"
    },
    {
      "start": 1216.48,
      "duration": 3.76,
      "text": "lito based so it's a modification of it",
      "timestamp": "20:16"
    },
    {
      "start": 1220.24,
      "duration": 2.559,
      "text": "uh to add to the coding that's correct",
      "timestamp": "20:20"
    },
    {
      "start": 1222.799,
      "duration": 2.081,
      "text": "that's correct yeah very much so i think",
      "timestamp": "20:22"
    },
    {
      "start": 1224.88,
      "duration": 3.039,
      "text": "there was another question unfortunately",
      "timestamp": "20:24"
    },
    {
      "start": 1227.919,
      "duration": 2.161,
      "text": "out of time I'll talk to you later okay",
      "timestamp": "20:27"
    },
    {
      "start": 1230.08,
      "duration": 4.52,
      "text": "thank you all thank you thanks",
      "timestamp": "20:30"
    }
  ],
  "extraction_timestamp": "2025-07-08T14:45:53.179241",
  "playlist_title": "EthCC[8] Redford Stage"
}